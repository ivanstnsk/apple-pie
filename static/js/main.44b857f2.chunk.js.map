{"version":3,"sources":["store/auth/actions.ts","store/user/actions.ts","store/auth/reducer.ts","store/statement/actions.ts","store/user/reducer.ts","store/statement/reducer.ts","store/reducer.ts","store/store.ts","screens/Login/useStore.ts","screens/Login/styles.ts","screens/Login/Login.tsx","screens/User/components/SideMenu/styles.ts","screens/User/components/SideMenu/SideMenu.tsx","screens/User/components/Header/styles.ts","screens/User/components/Header/Header.tsx","screens/User/components/MonthSelect/data.ts","screens/User/components/MonthSelect/styles.ts","screens/User/components/MonthSelect/MonthSelect.tsx","screens/User/components/MonthSelect/useStore.ts","screens/User/screens/Dashboard/components/MoneyChart/styles.ts","screens/User/screens/Dashboard/components/MoneyChart/MoneyChart.tsx","screens/User/screens/Dashboard/styles.ts","screens/User/screens/Dashboard/Dashboard.tsx","screens/User/screens/Dashboard/useStore.ts","api/client.ts","api/user.ts","api/statement.ts","screens/User/useStore.ts","screens/User/styles.ts","screens/User/User.tsx","hooks/useAuth.ts","App/components/PrivateRoute/PrivateRoute.tsx","App/components/LoginRoute/LoginRoute.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["AuthActions","UserActions","initState","token","localStorage","getItem","StatementActions","setMonth","month","type","SetMonth","payload","name","setStatement","items","SetStatement","reducer","combineReducers","auth","state","SetToken","RemoveToken","user","SetName","statement","store","createStore","composeWithDevTools","useStore","dispatch","useDispatch","onSetToken","length","setItem","setToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","Store","React","handleTokenChange","event","target","value","handleLoginClick","preventDefault","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","label","id","autoComplete","onChange","Button","color","onClick","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","justifyContent","padding","mixins","toolbar","appBarSpacer","content","flexGrow","height","overflow","container","paddingTop","paddingBottom","fixedHeight","userContainer","userName","userNameHidden","dateContainer","date","dateHidden","SideMenu","drawerOpen","onDrawerToggleClick","history","Router","drawerClasses","clsx","userNameClasses","dateClasses","getNavigateClickHandler","path","push","Drawer","open","IconButton","Divider","split","reduce","acc","substring","toUpperCase","List","ListItem","button","ListItemIcon","ListItemText","primary","renderItems","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","title","paddingRight","Header","onLogout","appClasses","drawIconClasses","AppBar","Toolbar","edge","aria-label","noWrap","MONTHS","modal","left","top","transform","outline","modalInner","flex","flexWrap","MonthSelect","useSelector","monthLabel","onSetMonth","modalOpen","setModalOpen","getModalSetOpenClickHandler","getModalSetMonthClickHandler","Modal","onClose","aria-labelledby","aria-describedby","Paper","Object","entries","map","handler","parseInt","renderButtons","MoneyChart","chartData","activeTab","setActiveTab","handleChangeActiveTab","tab","Grid","item","xs","md","lg","Tabs","Tab","data","valueField","argumentField","Dashboard","dates","Map","maxDays","Date","getDate","i","day","set","minus","plus","forEach","time","amount","m","balance","entry","get","statementGroupedByDay","url","method","headers","Headers","fullUrl","append","fetch","req","getUserInfo","a","client","res","json","console","log","getForMonth","unixStart","getTime","unixEnd","UserApi","getStatementCurrentMonth","StatementApi","getCurrentMonth","getMonth","onRemoveToken","removeItem","root","User","setDrawerOpen","handleDrawerToggle","handleLogout","useAuth","PrivateRoute","children","rest","isAuthorized","render","location","to","pathname","from","LoginRoute","AppInner","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44b857f2.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport enum AuthActions {\n  SetToken = 'Auth/SetToken',\n  RemoveToken = 'Auth/RemoveToken',\n}\n\nexport type AuthActionScheme = Action<AuthActions> & {\n  type: AuthActions;\n  payload?: string;\n}\n\nexport const setToken = (token: string): AuthActionScheme => {\n  return {\n    type: AuthActions.SetToken,\n    payload: token,\n  };\n};\n\nexport const removeToken = (): AuthActionScheme => {\n  return {\n    type: AuthActions.RemoveToken,\n  };\n};","import { Action } from 'redux';\n\nexport enum UserActions {\n  SetName = 'User/SetName',\n  SetMonth = 'User/SetMonth',\n}\n\nexport type UserActionScheme = Action<UserActions> & {\n  type: UserActions;\n  payload: string | number;\n}\n\nexport const setName = (name: string): UserActionScheme => {\n  return {\n    type: UserActions.SetName,\n    payload: name,\n  };\n};\n\nexport const setMonth = (month: number): UserActionScheme => {\n  return {\n    type: UserActions.SetMonth,\n    payload: month,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { AuthState } from './auth.types';\nimport { AuthActionScheme, AuthActions } from './actions';\n\ntype AuthReducer = Reducer<AuthState, AuthActionScheme>;\n\nconst initState: AuthState = {\n  token: localStorage.getItem('token'),\n};\n\nexport const authReducer: AuthReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case AuthActions.SetToken:\n      return {\n        ...state,\n        token: payload as string,\n      }\n    case AuthActions.RemoveToken:\n      return {\n        ...state,\n        token: null,\n      }\n    default:\n      return state;\n  }\n};","import { Action } from 'redux';\n\nimport { StatementRecord } from './statement.types';\n\nexport enum StatementActions {\n  SetStatement = 'Statement/SetStatement',\n}\n\nexport type StatementActionScheme = Action<StatementActions> & {\n  type: StatementActions;\n  payload: Array<StatementRecord>;\n}\n\nexport const setStatement = (items: Array<StatementRecord>): StatementActionScheme => {\n  return {\n    type: StatementActions.SetStatement,\n    payload: items,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { UserState } from './user.types';\nimport { UserActionScheme, UserActions } from './actions';\n\ntype UserReducer = Reducer<UserState, UserActionScheme>;\n\nconst initState: UserState = {\n  name: '',\n  month: 0,\n};\n\nexport const userReducer: UserReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case UserActions.SetName:\n      return {\n        ...state,\n        name: payload as string,\n      }\n    case UserActions.SetMonth:\n      return {\n        ...state,\n        month: payload as number,\n      }\n    default:\n      return state;\n  }\n};","import { Reducer } from 'redux';\n\nimport { StatementState, StatementRecord } from './statement.types';\nimport { StatementActionScheme, StatementActions } from './actions';\n\ntype StatementReducer = Reducer<StatementState, StatementActionScheme>;\n\nconst initState: StatementState = {\n  items: [],\n};\n\nexport const statementReducer: StatementReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case StatementActions.SetStatement:\n      return {\n        ...state,\n        items: payload as Array<StatementRecord>,\n      }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\n\nimport { RootState } from './store.types';\n\nimport { authReducer } from './auth/reducer';\nimport { userReducer } from './user/reducer';\nimport { statementReducer } from './statement/reducer';\n\nexport const reducer = combineReducers<RootState>({\n  auth: authReducer,\n  user: userReducer,\n  statement: statementReducer,\n});","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { reducer } from './reducer';\n\nexport const store = createStore(\n  reducer,\n  {},\n  composeWithDevTools(),\n);","import { useDispatch } from 'react-redux';\n\nimport { setToken } from '../../store/auth/actions';\n\ntype Hook = {\n  onSetToken: (token: string) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n\n  const onSetToken = (token: string) => {\n    if (token && token.length > 0) {\n      localStorage.setItem('token', token);\n      dispatch(setToken(token));\n    }\n  }\n\n  return {\n    onSetToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Login: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [token, setToken] = React.useState<string>('');\n\n  const handleTokenChange = React.useCallback((event: any) => {\n    setToken(event.target.value);\n  }, [setToken]);\n\n  const handleLoginClick = React.useCallback((event: any) => {\n    event.preventDefault();\n    Store.onSetToken(token);\n  }, [Store, token]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Мiй токен\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Token\"\n            type=\"password\"\n            id=\"token\"\n            autoComplete=\"none\"\n            value={token}\n            onChange={handleTokenChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleLoginClick}\n          >\n            Авторизуватися\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DRAWER_WIDTH,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n\n\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  userContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  userName: {\n    display: 'visible',\n  },\n  userNameHidden: {\n    display: 'none',\n  },\n  dateContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  date: {\n    display: 'visible',\n  },\n  dateHidden: {\n    display: 'none',\n  }\n}));","import * as React from 'react';\nimport * as Router from 'react-router-dom';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\n\nimport { useStyles } from './styles';\n\nconst getUserAvatarSymbols = (name: string): string => {\n  const n = name.split(' ');\n  return n.reduce((acc, value) => acc += value.substring(0, 1).toUpperCase(), '');\n}\n\nconst renderItems = (getNavigateClickHandler: (path: string) => () => void): JSX.Element => (\n  <>\n    <ListItem button onClick={getNavigateClickHandler('/planning')}>\n      <ListItemIcon>\n        <DateRangeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Планування\" />\n    </ListItem>\n    <ListItem button onClick={getNavigateClickHandler('/dashboard')}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Дашборд\" />\n    </ListItem>\n  </>\n);\n\ninterface Props {\n  drawerOpen: boolean;\n  userName: string;\n  onDrawerToggleClick: () => void;\n}\n\nexport const SideMenu: React.FC<Props> = ({\n  drawerOpen,\n  userName,\n  onDrawerToggleClick,\n}) => {\n  const classes = useStyles();\n  const history = Router.useHistory();\n\n  const drawerClasses = {\n    paper: clsx(classes.drawerPaper, !drawerOpen && classes.drawerPaperClose),\n  };\n  const userNameClasses = clsx(classes.userName, !drawerOpen && classes.userNameHidden);\n  const dateClasses = clsx(classes.date, !drawerOpen && classes.dateHidden);\n\n  const getNavigateClickHandler = React.useCallback((path: string) => () => {\n    history.push(path);\n  }, [history]);\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={drawerClasses}\n      open={drawerOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={onDrawerToggleClick}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.userContainer}>\n        <Avatar>{getUserAvatarSymbols(userName)}</Avatar>\n        <div className={userNameClasses}>\n          <Typography variant=\"h6\">{userName}</Typography>\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.dateContainer}>\n        <div className={dateClasses}>\n          <Typography variant=\"body2\">Липень 2020</Typography>\n        </div>\n      </div>\n      <Divider />\n      <List>\n        {renderItems(getNavigateClickHandler)}\n      </List>\n    </Drawer>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: DRAWER_WIDTH,\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n}));\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { useStyles } from './styles';\n\ninterface Props {\n  drawerOpen: boolean;\n  onDrawerToggleClick: () => void;\n  onLogout: () => void;\n}\n\nexport const Header: React.FC<Props> = ({\n  drawerOpen,\n  onDrawerToggleClick,\n  onLogout,\n}) => {\n  const classes = useStyles();\n\n  const appClasses = clsx(classes.appBar, drawerOpen && classes.appBarShift);\n  const drawIconClasses = clsx(classes.menuButton, drawerOpen && classes.menuButtonHidden);\n\n  return (\n    <AppBar position=\"absolute\" className={appClasses}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={onDrawerToggleClick}\n          className={drawIconClasses}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Page\n        </Typography>\n        <IconButton color=\"inherit\" onClick={onLogout}>\n          <ExitToAppIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}","export const MONTHS = {\n  '0': 'Січень',\n  '1': 'Лютий',\n  '2': 'Березень',\n  '3': 'Квітень',\n  '4': 'Травень',\n  '5': 'Червень',\n  '6': 'Липень',\n  '7': 'Серпень',\n  '8': 'Вересень',\n  '9': 'Жовтень',\n  '10': 'Листопад',\n  '11': 'Грудень',\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  modal: {\n    maxWidth: 500,\n    width: '100%',\n    height: 500,\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-150px, -250px)',\n    outline: 'none',\n  },\n  modalInner: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    height: '100%',\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10,\n  }\n}));\n","import * as React from 'react';\n// import clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nimport { MONTHS } from './data';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nconst renderButtons = (classes: any, label: string, onClick: () => void): JSX.Element => {\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n      onClick={onClick}\n    >\n      {label}\n    </Button>\n  );\n}\n\nexport const MonthSelect: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const getModalSetOpenClickHandler = React.useCallback((state: boolean) => () => {\n    setModalOpen(state);\n  }, [setModalOpen]);\n\n  const getModalSetMonthClickHandler = React.useCallback((month: number) => () => {\n    Store.onSetMonth(month);\n  }, [Store]);\n\n  return (\n    <>\n      <div className={classes.container}>\n        <Typography variant=\"h4\">{Store.monthLabel} 2020</Typography>\n        <IconButton aria-label=\"delete\" onClick={getModalSetOpenClickHandler(true)}>\n          <EditIcon />\n        </IconButton>\n      </div>\n      <Modal\n        open={modalOpen}\n        onClose={getModalSetOpenClickHandler(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.modal}>\n          <Paper className={classes.modalInner}>\n            {Object.entries(MONTHS).map(([month, label]) => {\n              const handler = getModalSetMonthClickHandler(parseInt(month));\n              return renderButtons(classes, label, handler);\n            })}\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n}","import { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { UserState } from '../../../../store/user/user.types';\nimport * as UserActions from '../../../../store/user/actions';\n\nimport { MONTHS } from './data';\n\ntype Hook = {\n  month: number;\n  monthLabel: string;\n  onSetMonth: (month: number) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const onSetMonth = (month: number) => {\n    dispatch(UserActions.setMonth(month));\n  }\n\n  return {\n    month: user.month,\n    monthLabel: MONTHS[user.month],\n    onSetMonth,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n  },\n}));\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  BarSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nimport { useStyles } from './styles';\n\ntype ChartTab =\n  | 'income'\n  | 'expenses';\n\ntype ChartItem = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ninterface Props {\n  chartData: Array<ChartItem>;\n}\n\nexport const MoneyChart: React.FC<Props> = ({\n  chartData,\n}) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState<ChartTab>('income');\n\n  const handleChangeActiveTab = React.useCallback((event: any, tab: ChartTab) => {\n    setActiveTab(tab);\n  }, [setActiveTab]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Tabs\n            value={activeTab}\n            onChange={handleChangeActiveTab}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Доходи\" value=\"income\" />\n            <Tab label=\"Витрати\" value=\"expenses\" />\n          </Tabs>\n          {activeTab === 'income' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"plus\"\n                valueField=\"plus\"\n                argumentField=\"day\"\n                color=\"#00b300\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n          {activeTab === 'expenses' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"minus\"\n                valueField=\"minus\"\n                argumentField=\"day\"\n                color=\"#ff4d4d\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper>\n          TODO: statistic for day\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n","import * as React from 'react';\n\nimport { MoneyChart } from './components';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Dashboard: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  return (\n    <div className={classes.paper}>\n      <MoneyChart\n        chartData={Store.statementGroupedByDay}\n      />\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { UserState } from '../../../../store/user/user.types';\nimport { StatementState } from '../../../../store/statement/statement.types';\n\ntype StatementGroupedByDay = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ntype Hook = {\n  statementGroupedByDay: Array<StatementGroupedByDay>;\n}\n\nexport const useStore = (): Hook => {\n  const statement = useSelector<RootState, StatementState>(state => state.statement);\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const dates = new Map<string, StatementGroupedByDay>();\n\n  const maxDays = new Date(2020, user.month, 0).getDate();\n  for (let i = 0; i < maxDays; i += 1) {\n    const day = `${i}`;\n    dates.set(day, {\n      day,\n      minus: 0,\n      plus: 0,\n    })\n  }\n\n  statement.items.forEach(({ time, amount, balance }) => {\n    const m = amount / 100;\n    const entry: StatementGroupedByDay = {\n      day: `${new Date(time * 1000).getDate()}`,\n      minus: m < 0 ? m : 0,\n      plus: m > 0 ? m : 0,\n    };\n    const item = dates.get(entry.day);\n    entry.minus += item ? item.minus : 0;\n    entry.plus += item ? item.plus : 0;\n    dates.set(entry.day, entry);\n  });\n\n  const statementGroupedByDay: Array<StatementGroupedByDay> = [];\n  dates.forEach((value) => {\n    statementGroupedByDay.push({\n      ...value,\n      minus: value.minus * -1,\n    });\n  });\n\n  return {\n    statementGroupedByDay,\n  }\n}","type Method = 'get';\n\nconst req = (method: Method, url: string) => {\n  const token = localStorage.getItem('token');\n  const headers = new Headers();\n  const fullUrl = `https://api.monobank.ua/${url}`;\n\n  if (token) {\n    headers.append('X-Token', token);\n  }\n\n  return fetch(fullUrl, {\n    method,\n    headers,\n  })\n}\n\nexport const get = (url: string) => req('get', url);\n","import * as client from './client';\n\n// import { MOCK_USER_INFO } from './mock-data';\n\ntype ResPersonalClientInfo = {\n  clientId: string;\n  name: string;\n  webHookUrl: string;\n  accounts: Array<any>;\n}\n\nexport const getUserInfo = async (): Promise<string | null> => {\n  try {\n    const res = await client.get('personal/client-info');\n    const data = await res.json();\n    const { name } = data as any as ResPersonalClientInfo;\n\n    return name;\n  } catch (e) {\n    console.log(e);\n  }\n  return null;\n  // const { name } = MOCK_USER_INFO;\n\n  // return Promise.resolve(name);\n}\n","import * as client from './client';\nimport { StatementRecord } from '../store/statement/statement.types';\n\n// import { MOCK_STATEMENT } from './mock-data';\n\ntype ResPersonalStatement = Array<StatementRecord>;\n\n// const generateEmptyItems = (month: number): Array<StatementRecord> => {\n//   const maxDays = new Date(2020, month, 0).getDate();\n//   const items: Array<StatementRecord> = [];\n\n//   for (let i = 0; i < maxDays; i += 1) {\n//     items.push({\n//       time: new Date(`2020.${month}.${i}`).getTime() / 1000,\n//       amount: 0,\n//       balance: 0,\n//     });\n//   }\n\n//   return items;\n// }\n\nexport const getForMonth = async (month: number): Promise<ResPersonalStatement> => {\n  const unixStart = new Date(`2020.${month}.01`).getTime() / 1000;\n  const unixEnd = new Date(`2020.${month}.${new Date(2020, month, 0).getDate()}`).getTime() / 1000;\n\n  // return Promise.resolve(MOCK_STATEMENT);\n\n  try {\n    const res = await client.get(`personal/statement/0/${unixStart}/${unixEnd}`);\n    const data = await res.json();\n\n    if (data && data.length > 0) {\n      const items = data as any as ResPersonalStatement;\n\n      return items;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return [];\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as UserApi from '../../api/user';\nimport * as StatementApi from '../../api/statement';\nimport { RootState } from '../../store/store.types';\nimport { UserState } from '../../store/user/user.types';\nimport * as AuthActions from '../../store/auth/actions';\nimport * as UserActions from '../../store/user/actions';\nimport * as StatementActions from '../../store/statement/actions';\n\ntype Hook = {\n  userName: string;\n  onRemoveToken: () => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const onRemoveToken = () => {\n    localStorage.removeItem('token');\n    dispatch(AuthActions.removeToken());\n  }\n\n  const getUserInfo = React.useCallback(async () => {\n    const userName = await UserApi.getUserInfo();\n    if (userName) {\n      dispatch(UserActions.setName(userName));\n    }\n  }, [dispatch]);\n\n  const getStatementCurrentMonth = React.useCallback(async (month: number) => {\n    const items = await StatementApi.getForMonth(month);\n    dispatch(StatementActions.setStatement(items));\n  }, [dispatch]);\n\n  const getCurrentMonth = React.useCallback(() => {\n    const month = new Date().getMonth();\n    dispatch(UserActions.setMonth(month));\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    getUserInfo();\n    getCurrentMonth();\n  }, [getUserInfo, getCurrentMonth]);\n\n  React.useEffect(() => {\n    getStatementCurrentMonth(user.month);\n  }, [getStatementCurrentMonth, user.month]);\n\n  return {\n    userName: user.name,\n    onRemoveToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n","import * as React from 'react';\nimport { Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport { SideMenu, Header, MonthSelect } from './components';\nimport { Dashboard } from './screens';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const User: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n\n  const handleDrawerToggle = React.useCallback(() => {\n    console.log(drawerOpen, !drawerOpen)\n    setDrawerOpen(!drawerOpen);\n  }, [drawerOpen, setDrawerOpen]);\n\n  const handleLogout = React.useCallback(() => {\n    Store.onRemoveToken();\n  }, [Store]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header\n        drawerOpen={drawerOpen}\n        onDrawerToggleClick={handleDrawerToggle}\n        onLogout={handleLogout}\n      />\n      <SideMenu\n        drawerOpen={drawerOpen}\n        userName={Store.userName}\n        onDrawerToggleClick={handleDrawerToggle}\n      />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <MonthSelect />\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../store/store.types';\nimport { AuthState } from '../store/auth/auth.types';\n\ntype Hook = boolean;\n\nexport const useAuth = (): Hook => {\n  const { token } = useSelector<RootState, AuthState>(state => state.auth);\n\n  return !!token;\n}","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const PrivateRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const LoginRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport { store } from '../store';\nimport { Login, User } from '../screens';\n\nimport { LoginRoute, PrivateRoute } from './components';\n\nconst AppInner: React.FC = () => {\n  return (\n    <Switch>\n      <LoginRoute path=\"/login\">\n        <Login />\n      </LoginRoute>\n      <PrivateRoute path=\"/\">\n        <User />\n      </PrivateRoute>\n    </Switch>\n  );\n}\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <AppInner />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}