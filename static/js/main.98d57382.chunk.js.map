{"version":3,"sources":["store/auth/actions.ts","store/user/actions.ts","store/auth/reducer.ts","store/statement/actions.ts","store/user/reducer.ts","store/planning/actions.ts","store/statement/reducer.ts","store/categories/actions.ts","store/planning/utils.ts","store/planning/reducer.ts","store/categories/reducer.ts","store/reducer.ts","store/store.ts","screens/Login/useStore.ts","screens/Login/styles.ts","screens/Login/Login.tsx","screens/User/components/SideMenu/styles.ts","screens/User/components/SideMenu/SideMenu.tsx","screens/User/components/Header/styles.ts","screens/User/components/Header/Header.tsx","screens/User/components/MonthSelect/styles.ts","utils/month.ts","screens/User/components/Breadcrumbs/styles.ts","screens/User/components/Breadcrumbs/Breadcrumbs.tsx","screens/User/screens/Dashboard/components/MoneyChart/styles.ts","screens/User/screens/Dashboard/components/MoneyChart/MoneyChart.tsx","screens/User/screens/Dashboard/styles.ts","screens/User/screens/Dashboard/Dashboard.tsx","screens/User/screens/Dashboard/useStore.ts","screens/User/screens/Planning/screens/Month/components/ProgressBar/ProgressBar.tsx","screens/User/screens/Planning/screens/Month/styles.ts","screens/User/screens/Planning/screens/Month/Month.tsx","screens/User/screens/Planning/screens/Month/useStore.ts","screens/User/screens/Planning/screens/Year/styles.ts","screens/User/screens/Planning/screens/Year/Year.tsx","screens/User/screens/Planning/screens/Year/useStore.ts","screens/User/screens/Planning/useStore.ts","screens/User/screens/Planning/styles.ts","screens/User/screens/Planning/Planning.tsx","screens/User/screens/Categories/useStore.ts","screens/User/screens/Categories/styles.ts","screens/User/screens/Categories/Categories.tsx","api/client.ts","api/user.ts","api/statement.ts","screens/User/useStore.ts","screens/User/styles.ts","screens/User/User.tsx","hooks/useAuth.ts","App/components/PrivateRoute/PrivateRoute.tsx","App/components/LoginRoute/LoginRoute.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["AuthActions","UserActions","initState","token","StatementActions","setMonth","month","type","SetMonth","payload","name","PlanningActions","setStatement","items","SetStatement","CategoryActions","createEmptyPlanningYear","year","categoriesState","months","i","income","map","category","id","prognosis","actual","difference","expenses","plans","authPersistConfig","key","storage","planningPersistConfig","categoriesPersistConfig","reducer","combineReducers","auth","persistReducer","state","SetToken","RemoveToken","user","SetName","statement","planning","CreatePlanningYear","y","filter","planningYear","length","categories","AddCategory","cat","categoriesWithSameName","push","UpdateCategory","targetIndex","findIndex","Array","from","DeleteCategory","splice","store","createStore","composeWithDevTools","persistor","persistStore","useStore","dispatch","useDispatch","onSetToken","setToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","Store","React","handleTokenChange","event","target","value","handleLoginClick","preventDefault","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","label","autoComplete","onChange","Button","color","onClick","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","justifyContent","padding","mixins","toolbar","appBarSpacer","content","flexGrow","height","overflow","container","paddingTop","paddingBottom","fixedHeight","userContainer","userName","userNameHidden","dateContainer","date","dateHidden","SideMenu","drawerOpen","onDrawerToggleClick","history","Router","drawerClasses","clsx","userNameClasses","dateClasses","getNavigateClickHandler","path","Drawer","open","IconButton","Divider","split","reduce","acc","substring","toUpperCase","List","ListItem","button","ListItemIcon","ListItemText","primary","renderItems","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","title","paddingRight","Header","onLogout","pageTitle","pathname","getPageTitle","useLocation","appClasses","drawIconClasses","AppBar","Toolbar","edge","aria-label","noWrap","modal","left","top","transform","outline","modalInner","flex","flexWrap","MONTHS","getMonthNameByIndex","wrapper","paddingLeft","renderBreadcrumbs","chunks","getClickHandler","chunk","index","fullPath","slice","sliceIndex","last","finalLabel","startsWith","Link","href","renderLink","Breadcrumbs","location","useHistory","getBreadcrumbClickHandler","MoneyChart","chartData","activeTab","setActiveTab","handleChangeActiveTab","tab","Grid","item","xs","md","lg","Paper","Tabs","Tab","data","valueField","argumentField","Dashboard","useSelector","dates","Map","maxDays","Date","getDate","day","set","minus","plus","forEach","time","amount","m","balance","entry","get","statementGroupedByDay","ProgressBar","progress","fillerStyles","borderRadius","style","titleContainer","marginBottom","card","cardDetails","tableWrapper","CATEGORIES_COLUMNS","field","editable","tableIcons","Check","props","ref","Clear","Edit","SortArrow","renderBalanceTable","Card","CardContent","renderCategoriesTable2","onRowUpdate","columns","icons","options","paging","search","localization","header","actions","body","editRow","deleteText","deleteTooltip","Month","params","useParams","yearKey","parseInt","NaN","monthKey","monthPlan","plan","find","getRowUpdateHandler","categoryType","oldData","a","console","log","Promise","resolve","Year","numYear","getMonthClickHandler","Object","keys","renderMonthButtons","handleCreatePlanningYear","Planning","handleCreatePlanningYearClick","getFullYear","getPlanningYearClickHandler","renderYearButtons","exact","onAddCategory","toString","CategoriesActions","onUpdateCategory","onDeleteCategory","COLUMNS","Add","Delete","ResetSearch","Search","renderTable","onRowAdd","onRowDelete","Categories","getRowAddHandler","getRowDeleteHandler","url","method","authData","localStorage","getItem","headers","Headers","fullUrl","JSON","parse","append","fetch","req","getUserInfo","client","res","json","getForMonth","unixStart","getTime","unixEnd","UserApi","getStatementCurrentMonth","StatementApi","getCurrentMonth","getMonth","onRemoveToken","root","User","setDrawerOpen","handleDrawerToggle","handleLogout","useAuth","PrivateRoute","children","rest","isAuthorized","render","to","LoginRoute","createMuiTheme","AppInner","App","ThemeProvider","basename","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.98d57382.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport enum AuthActions {\n  SetToken = 'Auth/SetToken',\n  RemoveToken = 'Auth/RemoveToken',\n}\n\nexport type AuthActionScheme = Action<AuthActions> & {\n  type: AuthActions;\n  payload?: string;\n}\n\nexport const setToken = (token: string): AuthActionScheme => {\n  return {\n    type: AuthActions.SetToken,\n    payload: token,\n  };\n};\n\nexport const removeToken = (): AuthActionScheme => {\n  return {\n    type: AuthActions.RemoveToken,\n  };\n};","import { Action } from 'redux';\n\nexport enum UserActions {\n  SetName = 'User/SetName',\n  SetMonth = 'User/SetMonth',\n}\n\nexport type UserActionScheme = Action<UserActions> & {\n  type: UserActions;\n  payload: string | number;\n}\n\nexport const setName = (name: string): UserActionScheme => {\n  return {\n    type: UserActions.SetName,\n    payload: name,\n  };\n};\n\nexport const setMonth = (month: number): UserActionScheme => {\n  return {\n    type: UserActions.SetMonth,\n    payload: month,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { AuthState } from './auth.types';\nimport { AuthActionScheme, AuthActions } from './actions';\n\ntype AuthReducer = Reducer<AuthState, AuthActionScheme>;\n\nconst initState: AuthState = {\n  token: '',\n};\n\nexport const authReducer: AuthReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case AuthActions.SetToken:\n      return {\n        ...state,\n        token: payload as string,\n      }\n    case AuthActions.RemoveToken:\n      return {\n        ...state,\n        token: null,\n      }\n    default:\n      return state;\n  }\n};\n","import { Action } from 'redux';\n\nimport { StatementRecord } from './statement.types';\n\nexport enum StatementActions {\n  SetStatement = 'Statement/SetStatement',\n}\n\nexport type StatementActionScheme = Action<StatementActions> & {\n  type: StatementActions;\n  payload: Array<StatementRecord>;\n}\n\nexport const setStatement = (items: Array<StatementRecord>): StatementActionScheme => {\n  return {\n    type: StatementActions.SetStatement,\n    payload: items,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { UserState } from './user.types';\nimport { UserActionScheme, UserActions } from './actions';\n\ntype UserReducer = Reducer<UserState, UserActionScheme>;\n\nconst initState: UserState = {\n  name: '',\n  month: 0,\n};\n\nexport const userReducer: UserReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case UserActions.SetName:\n      return {\n        ...state,\n        name: payload as string,\n      }\n    case UserActions.SetMonth:\n      return {\n        ...state,\n        month: payload as number,\n      }\n    default:\n      return state;\n  }\n};","import { Action } from 'redux';\n\nimport { CategoriesState } from '../categories/categories.types';\n\nexport enum PlanningActions {\n  CreatePlanningYear = 'Planning/CreatePlanningYear',\n}\n\nexport type PlanningActionScheme = Action<PlanningActions> & {\n  type: PlanningActions;\n  payload: {\n    year: string | number;\n    categoriesState: CategoriesState;\n  };\n}\n\nexport const createPlanningYear = (year: number, categoriesState: CategoriesState): PlanningActionScheme => {\n  return {\n    type: PlanningActions.CreatePlanningYear,\n    payload: {\n      year,\n      categoriesState,\n    },\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { StatementState, StatementRecord } from './statement.types';\nimport { StatementActionScheme, StatementActions } from './actions';\n\ntype StatementReducer = Reducer<StatementState, StatementActionScheme>;\n\nconst initState: StatementState = {\n  items: [],\n};\n\nexport const statementReducer: StatementReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case StatementActions.SetStatement:\n      return {\n        ...state,\n        items: payload as Array<StatementRecord>,\n      }\n    default:\n      return state;\n  }\n};","import { Action } from 'redux';\n\nimport { Category, CategoryType } from './categories.types';\n\nexport enum CategoryActions {\n  AddCategory = 'Categories/AddCategory',\n  UpdateCategory = 'Categories/UpdateCategory',\n  DeleteCategory = 'Categories/DeleteCategory',\n}\n\nexport type CategoryActionScheme = Action<CategoryActions> & {\n  type: CategoryActions;\n  payload: Category | { type: string, id: string };\n}\n\nexport const addCategory = (category: Category): CategoryActionScheme => {\n  return {\n    type: CategoryActions.AddCategory,\n    payload: category,\n  };\n};\n\nexport const updateCategory = (category: Category): CategoryActionScheme => {\n  return {\n    type: CategoryActions.UpdateCategory,\n    payload: category,\n  };\n};\n\nexport const deleteCategory = (type: CategoryType, id: string): CategoryActionScheme => {\n  return {\n    type: CategoryActions.DeleteCategory,\n    payload: {\n      type,\n      id,\n    },\n  };\n};\n","import { CategoriesState } from '../categories/categories.types';\n\nimport { PlanningYear, Plan } from './planning.types';\n\nexport const createEmptyPlanningYear = (year: number, categoriesState: CategoriesState): PlanningYear => {\n  const months = {};\n  for (let i = 0; i < 12; i += 1) {\n    months[i] = {\n      income: categoriesState.income.map(category => {\n        const prognosis = 100;\n        const actual = 50;\n        const difference = prognosis - actual;\n\n        return {\n          id: category.id,\n          name: category.name,\n          prognosis,\n          actual,\n          difference,\n        }\n      }),\n      expenses: categoriesState.expenses.map(category => {\n        const prognosis = 100;\n        const actual = 50;\n        const difference = prognosis - actual;\n\n        return {\n          id: category.id,\n          name: category.name,\n          prognosis,\n          actual,\n          difference,\n        }\n      }),\n    } as Plan;\n  }\n  const planningYear: PlanningYear = {\n    year,\n    months: months as PlanningYear['months'],\n  }\n\n  return planningYear;\n}","import { Reducer } from 'redux';\n\nimport { CategoriesState } from '../categories/categories.types';\n\nimport { PlanningState } from './planning.types';\nimport { PlanningActionScheme, PlanningActions } from './actions';\nimport { createEmptyPlanningYear } from './utils';\n\ntype PlanningReducer = Reducer<PlanningState, PlanningActionScheme>;\n\nconst initState: PlanningState = {\n  plans: []\n};\n\nexport const planningReducer: PlanningReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case PlanningActions.CreatePlanningYear:\n      const { year, categoriesState } = payload as {\n        year: number;\n        categoriesState: CategoriesState;\n      };\n      const y = state.plans.filter((planningYear) => planningYear.year === year);\n\n      if (y.length > 0) {\n        return state;\n      }\n\n      return {\n        ...state,\n        plans: [\n          ...state.plans,\n          createEmptyPlanningYear(year, categoriesState),\n        ]\n      }\n    default:\n      return state;\n  }\n};","import { Reducer } from 'redux';\n\nimport { CategoriesState, Category, CategoryType } from './categories.types';\nimport { CategoryActionScheme, CategoryActions } from './actions';\n\ntype StatementReducer = Reducer<CategoriesState, CategoryActionScheme>;\n\nconst initState: CategoriesState = {\n  income: [],\n  expenses: [],\n};\n\nexport const categoriesReducer: StatementReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case CategoryActions.AddCategory: {\n      const category = payload as Category;\n      const items = state[category.type].filter(cat => cat.id !== category.id);\n\n      const categoriesWithSameName = state[category.type].filter(cat => cat.name === category.name);\n      if (categoriesWithSameName.length > 0) {\n        return state;\n      }\n\n      items.push(category);\n\n      return {\n        ...state,\n        [category.type]: items,\n      }\n    }\n    case CategoryActions.UpdateCategory: {\n      const category = payload as Category;\n      const targetIndex = state[category.type].findIndex(cat => cat.id === category.id);\n\n      if (targetIndex < 0) {\n        return state;\n      }\n\n      const categoriesWithSameName = state[category.type].filter(cat => cat.name === category.name);\n      if (categoriesWithSameName.length > 0) {\n        return state;\n      }\n\n      const items = Array.from(state[category.type]);\n      items[targetIndex] = { ...category };\n      return {\n        ...state,\n        [category.type]: items,\n      }\n    }\n    case CategoryActions.DeleteCategory: {\n      const { id, type } = payload as { id: string, type: CategoryType };\n      const targetIndex = state[type].findIndex(cat => cat.id === id);\n\n      if (targetIndex < 0) {\n        return state;\n      }\n\n      const items = Array.from(state[type]);\n      items.splice(targetIndex, 1);\n      return {\n        ...state,\n        [type]: items,\n      }\n    }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\n\nimport { RootState } from './store.types';\n\nimport { authReducer } from './auth/reducer';\nimport { userReducer } from './user/reducer';\nimport { statementReducer } from './statement/reducer';\nimport { planningReducer } from './planning/reducer';\nimport { categoriesReducer } from './categories/reducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage: storage,\n};\n\nconst planningPersistConfig = {\n  key: 'planning',\n  storage: storage,\n};\n\nconst categoriesPersistConfig = {\n  key: 'categories',\n  storage: storage,\n};\n\nexport const reducer = combineReducers<RootState>({\n  auth: persistReducer(authPersistConfig, authReducer) as any,\n  user: userReducer,\n  statement: statementReducer,\n  planning: persistReducer(planningPersistConfig, planningReducer) as any,\n  categories: persistReducer(categoriesPersistConfig, categoriesReducer) as any,\n});","import { createStore } from 'redux';\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { reducer } from './reducer';\n\nexport const store = createStore(\n  reducer,\n  {},\n  composeWithDevTools(),\n);\n\nexport const persistor = persistStore(store);\n","import { useDispatch } from 'react-redux';\n\nimport { setToken } from '../../store/auth/actions';\n\ntype Hook = {\n  onSetToken: (token: string) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n\n  const onSetToken = (token: string) => {\n    if (token && token.length > 0) {\n      dispatch(setToken(token));\n    }\n  }\n\n  return {\n    onSetToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Login: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [token, setToken] = React.useState<string>('');\n\n  const handleTokenChange = React.useCallback((event: any) => {\n    setToken(event.target.value);\n  }, [setToken]);\n\n  const handleLoginClick = React.useCallback((event: any) => {\n    event.preventDefault();\n    Store.onSetToken(token);\n  }, [Store, token]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Mono токен\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Token\"\n            type=\"password\"\n            id=\"token\"\n            autoComplete=\"none\"\n            value={token}\n            onChange={handleTokenChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleLoginClick}\n          >\n            Авторизуватися\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DRAWER_WIDTH,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n\n\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  userContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  userName: {\n    display: 'visible',\n  },\n  userNameHidden: {\n    display: 'none',\n  },\n  dateContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  date: {\n    display: 'visible',\n  },\n  dateHidden: {\n    display: 'none',\n  }\n}));","import * as React from 'react';\nimport * as Router from 'react-router-dom';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { useStyles } from './styles';\n\nconst getUserAvatarSymbols = (name: string): string => {\n  const n = name.split(' ');\n  return n.reduce((acc, value) => acc += value.substring(0, 1).toUpperCase(), '');\n}\n\nconst renderItems = (getNavigateClickHandler: (path: string) => () => void): JSX.Element => (\n  <>\n    <ListItem button onClick={getNavigateClickHandler('/planning')}>\n      <ListItemIcon>\n        <DateRangeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Планування\" />\n    </ListItem>\n    <ListItem button onClick={getNavigateClickHandler('/categories')}>\n      <ListItemIcon>\n        <CategoryIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Категорії доходів і витрат\" />\n    </ListItem>\n    <ListItem button onClick={getNavigateClickHandler('/dashboard')}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Дашборд\" />\n    </ListItem>\n  </>\n);\n\ninterface Props {\n  drawerOpen: boolean;\n  userName: string;\n  onDrawerToggleClick: () => void;\n}\n\nexport const SideMenu: React.FC<Props> = ({\n  drawerOpen,\n  userName,\n  onDrawerToggleClick,\n}) => {\n  const classes = useStyles();\n  const history = Router.useHistory();\n\n  const drawerClasses = {\n    paper: clsx(classes.drawerPaper, !drawerOpen && classes.drawerPaperClose),\n  };\n  const userNameClasses = clsx(classes.userName, !drawerOpen && classes.userNameHidden);\n  const dateClasses = clsx(classes.date, !drawerOpen && classes.dateHidden);\n\n  const getNavigateClickHandler = React.useCallback((path: string) => () => {\n    history.push(path);\n  }, [history]);\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={drawerClasses}\n      open={drawerOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={onDrawerToggleClick}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.userContainer}>\n        <Avatar>{getUserAvatarSymbols(userName)}</Avatar>\n        <div className={userNameClasses}>\n          <Typography variant=\"h6\">{userName}</Typography>\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.dateContainer}>\n        <div className={dateClasses}>\n          <Typography variant=\"body2\">Липень 2020</Typography>\n        </div>\n      </div>\n      <Divider />\n      <List>\n        {renderItems(getNavigateClickHandler)}\n      </List>\n    </Drawer>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: DRAWER_WIDTH,\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n}));\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { useStyles } from './styles';\n\ninterface Props {\n  drawerOpen: boolean;\n  onDrawerToggleClick: () => void;\n  onLogout: () => void;\n}\n\nconst getPageTitle = (pathname: string): string => {\n  switch (pathname) {\n    case '/planning':\n      return 'Планування';\n    case '/dashboard':\n      return 'Дашборд';\n    case '/categories':\n      return 'Категорії доходів і витрат';\n    default:\n      return '';\n  }\n}\n\nexport const Header: React.FC<Props> = ({\n  drawerOpen,\n  onDrawerToggleClick,\n  onLogout,\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const pageTitle = getPageTitle(location.pathname);\n\n  const appClasses = clsx(classes.appBar, drawerOpen && classes.appBarShift);\n  const drawIconClasses = clsx(classes.menuButton, drawerOpen && classes.menuButtonHidden);\n\n  return (\n    <AppBar position=\"absolute\" className={appClasses}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={onDrawerToggleClick}\n          className={drawIconClasses}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          {pageTitle}\n        </Typography>\n        <IconButton color=\"inherit\" onClick={onLogout}>\n          <ExitToAppIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  modal: {\n    maxWidth: 500,\n    width: '100%',\n    height: 500,\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-150px, -250px)',\n    outline: 'none',\n  },\n  modalInner: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    height: '100%',\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10,\n  }\n}));\n","const MONTHS = {\n  '0': 'Січень',\n  '1': 'Лютий',\n  '2': 'Березень',\n  '3': 'Квітень',\n  '4': 'Травень',\n  '5': 'Червень',\n  '6': 'Липень',\n  '7': 'Серпень',\n  '8': 'Вересень',\n  '9': 'Жовтень',\n  '10': 'Листопад',\n  '11': 'Грудень',\n};\n\n\nexport const getMonthNameByIndex = (month: string): string => {\n  return MONTHS[month] || 'Invalid month';\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    paddingLeft: 24,\n    paddingRight: 24,\n    marginTop: 10,\n  }\n}));\n","import * as React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport BreadcrumbsUI from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMonthNameByIndex } from '../../../../utils';\n\nimport { useStyles } from './styles';\n\nconst renderLink = (path: string, label: string, onClick: () => void, last = false) => {\n  let finalLabel = label;\n\n  if (label.startsWith('year-')) {\n    finalLabel = label.substring(5, label.length);\n  } else if (label.startsWith('month-')) {\n    const month = label.substring(6, label.length);\n    finalLabel = getMonthNameByIndex(month);\n  }\n\n  if (last) {\n    return (\n      <Typography color=\"textPrimary\">{finalLabel}</Typography>\n    );\n  }\n  return (\n    <Link\n      key={path}\n      color=\"inherit\"\n      href={path}\n      onClick={onClick}\n    >\n      {finalLabel}\n    </Link>\n  );\n}\n\nconst renderBreadcrumbs = (chunks: string[], getClickHandler: (path: string) => () => void) => {\n  return chunks.map((chunk, index) => {\n    const fullPath = chunks\n      .slice(0, index + 1)\n      .reduce((acc, value, sliceIndex) => {\n        return acc += `${value}${sliceIndex < index ? '/' : ''}`;\n      }, '');\n    const handler = getClickHandler(fullPath);\n    const isLast = index === chunks.length - 1;\n\n    return renderLink(fullPath, chunk, handler, isLast);\n  });\n}\n\nexport const Breadcrumbs: React.FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const chunks = location.pathname.split('/');\n\n  const getBreadcrumbClickHandler = React.useCallback((path: string) => () => {\n    history.push(path);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <BreadcrumbsUI aria-label=\"breadcrumb\">\n        {renderBreadcrumbs(chunks, getBreadcrumbClickHandler)}\n      </BreadcrumbsUI>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n  },\n}));\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  BarSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nimport { useStyles } from './styles';\n\ntype ChartTab =\n  | 'income'\n  | 'expenses';\n\ntype ChartItem = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ninterface Props {\n  chartData: Array<ChartItem>;\n}\n\nexport const MoneyChart: React.FC<Props> = ({\n  chartData,\n}) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState<ChartTab>('income');\n\n  const handleChangeActiveTab = React.useCallback((event: any, tab: ChartTab) => {\n    setActiveTab(tab);\n  }, [setActiveTab]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Tabs\n            value={activeTab}\n            onChange={handleChangeActiveTab}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Доходи\" value=\"income\" />\n            <Tab label=\"Витрати\" value=\"expenses\" />\n          </Tabs>\n          {activeTab === 'income' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"plus\"\n                valueField=\"plus\"\n                argumentField=\"day\"\n                color=\"#00b300\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n          {activeTab === 'expenses' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"minus\"\n                valueField=\"minus\"\n                argumentField=\"day\"\n                color=\"#ff4d4d\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper>\n          TODO: statistic for day\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n","import * as React from 'react';\n\nimport { MoneyChart } from './components';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Dashboard: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  return (\n    <div className={classes.paper}>\n      <MoneyChart\n        chartData={Store.statementGroupedByDay}\n      />\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { UserState } from '../../../../store/user/user.types';\nimport { StatementState } from '../../../../store/statement/statement.types';\n\ntype StatementGroupedByDay = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ntype Hook = {\n  statementGroupedByDay: Array<StatementGroupedByDay>;\n}\n\nexport const useStore = (): Hook => {\n  const statement = useSelector<RootState, StatementState>(state => state.statement);\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const dates = new Map<string, StatementGroupedByDay>();\n\n  const maxDays = new Date(2020, user.month, 0).getDate();\n  for (let i = 0; i < maxDays; i += 1) {\n    const day = `${i}`;\n    dates.set(day, {\n      day,\n      minus: 0,\n      plus: 0,\n    })\n  }\n\n  statement.items.forEach(({ time, amount, balance }) => {\n    const m = amount / 100;\n    const entry: StatementGroupedByDay = {\n      day: `${new Date(time * 1000).getDate()}`,\n      minus: m < 0 ? m : 0,\n      plus: m > 0 ? m : 0,\n    };\n    const item = dates.get(entry.day);\n    entry.minus += item ? item.minus : 0;\n    entry.plus += item ? item.plus : 0;\n    dates.set(entry.day, entry);\n  });\n\n  const statementGroupedByDay: Array<StatementGroupedByDay> = [];\n  dates.forEach((value) => {\n    statementGroupedByDay.push({\n      ...value,\n      minus: value.minus * -1,\n    });\n  });\n\n  return {\n    statementGroupedByDay,\n  }\n}","import * as React from 'react';\n\ninterface Props {\n  color: string;\n  progress: number;\n}\n\nexport const ProgressBar: React.FC<Props> = ({\n  color,\n  progress,\n}) => {\n  const containerStyles = {\n    height: 16,\n    backgroundColor: \"#e0e0de\",\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${progress}%`,\n    backgroundColor: color,\n    borderRadius: 'inherit',\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles} />\n    </div>\n  );\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    marginBottom: 16,\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  tableWrapper: {\n    marginTop: 24,\n  }\n}));\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport MaterialTable from 'material-table';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport Edit from '@material-ui/icons/EditOutlined';\n\nimport { CategoryType } from '../../../../../../store/categories/categories.types';\nimport { getMonthNameByIndex } from '../../../../../../utils';\n\nimport { ProgressBar } from './components';\nimport { useStore, CategoryPrognosis, Balance } from './useStore';\nimport { useStyles } from './styles';\n\ntype RouteParams = {\n  year?: string;\n  month?: string;\n}\n\nconst CATEGORIES_COLUMNS = [\n  { title: 'category', field: 'name', editable: 'never' },\n  { title: 'prognosis', field: 'prognosis' },\n  { title: 'actual', field: 'actual' },\n  { title: 'difference', field: 'difference', editable: 'never' },\n];\n\nconst tableIcons = {\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nconst renderBalanceTable = (\n  title: string,\n  balance: Balance,\n  classes: any,\n  color: string,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <Typography component=\"h2\" variant=\"h5\">\n        {title}\n      </Typography>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Grid container>\n              <Grid xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">Prognosis</Typography>\n              </Grid>\n              <Grid xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">\n                  {balance.prognosis}\n                </Typography>\n              </Grid>\n              <Grid xs={6} md={6}>\n                <ProgressBar color={color} progress={0} />\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">Actual</Typography>\n              </Grid>\n              <Grid xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">\n                  {balance.actual}\n                </Typography>\n              </Grid>\n              <Grid xs={6} md={6}>\n                <ProgressBar color={color} progress={59} />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </div>\n      </Card>\n    </Grid>\n  );\n\nconst renderCategoriesTable2 = (\n  categories: Array<CategoryPrognosis>,\n  title: string,\n  onRowUpdate: (newData: any, oldData: any) => Promise<void>,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <MaterialTable\n        title={title}\n        columns={CATEGORIES_COLUMNS as any}\n        data={categories}\n        editable={{\n          onRowUpdate,\n        }}\n        icons={tableIcons as any}\n        options={{\n          paging: false,\n          search: false,\n        }}\n        localization={{\n          header: {\n            actions: '',\n          },\n          body: {\n            editRow: {\n              deleteText: 'Видалити цю категорію?',\n            },\n            deleteTooltip: 'Видалити'\n          }\n        }}\n      />\n    </Grid>\n  );\n\nexport const Month: React.FC = () => {\n  const classes = useStyles();\n  const params = useParams<RouteParams>();\n  const Store = useStore(params.year, params.month);\n\n  const getRowUpdateHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any, oldData: any): Promise<void> => {\n      console.log(data);\n      // Store.onUpdateCategory(categoryType, data.id, data.name)\n      return Promise.resolve();\n    }\n  }, []);\n\n  return (\n    <div className={classes.paper}>\n      <>\n        {params.month && params.year && (\n          <div className={classes.titleContainer}>\n            <Typography component=\"h1\" variant=\"h4\">\n              {`${getMonthNameByIndex(params.month)} ${params.year}`}\n            </Typography>\n          </div>\n        )}\n        <Grid container spacing={4}>\n          {renderBalanceTable(\n            'Expenses',\n            Store.expenses.balance,\n            classes,\n            '#9E3D3D',\n          )}\n          {renderBalanceTable(\n            'Income',\n            Store.income.balance,\n            classes,\n            '#539E3D',\n          )}\n        </Grid>\n\n        <Grid container spacing={4} className={classes.tableWrapper}>\n          {renderCategoriesTable2(\n            Store.expenses.categories,\n            'Expenses',\n            getRowUpdateHandler('expenses'),\n          )}\n          {renderCategoriesTable2(\n            Store.income.categories,\n            'Income',\n            getRowUpdateHandler('income'),\n          )}\n        </Grid>\n      </>\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../../../store/store.types';\nimport { PlanningState, Plan } from '../../../../../../store/planning/planning.types';\n// import { CategoriesState } from '../../../../../../store/categories/categories.types';\n\nexport type CategoryPrognosis = {\n  id: string;\n  name: string;\n  prognosis: number;\n  actual: number;\n  difference: number;\n}\n\nexport type Balance = {\n  prognosis: number;\n  actual: number;\n}\n\ntype Hook = {\n  income: {\n    balance: Balance;\n    categories: Array<CategoryPrognosis>;\n  }\n  expenses: {\n    balance: Balance;\n    categories: Array<CategoryPrognosis>;\n  }\n}\n\nexport const useStore = (year: string | undefined, month: string | undefined): Hook => {\n  const yearKey = year ? parseInt(year) : NaN;\n  const monthKey = month || 'invalid';\n\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n  // const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n  // const { income, expenses } = categories;\n\n  let monthPlan: Plan = {\n    income: [],\n    expenses: [],\n  };\n\n  const plan = planning.plans.find((plan) => plan.year === yearKey);\n  if (plan) {\n    monthPlan = plan.months[monthKey];\n  }\n\n  const { income, expenses } = monthPlan;\n\n  // const incomePrognosis = income.map((category) => {\n  //   const prognosis = 100;\n  //   const actual = 50;\n  //   const difference = prognosis - actual;\n\n  //   return {\n  //     id: category.id,\n  //     name: category.name,\n  //     prognosis,\n  //     actual,\n  //     difference,\n  //   }\n  // });\n\n  // const expensesPrognosis = income.map((category) => {\n  //   const prognosis = 100;\n  //   const actual = 50;\n  //   const difference = prognosis - actual;\n\n  //   return {\n  //     id: category.id,\n  //     name: category.name,\n  //     prognosis,\n  //     actual,\n  //     difference,\n  //   }\n  // });\n\n  const incomeBalance = {\n    prognosis: income.reduce((acc, category) => {\n      return acc += category.prognosis;\n    }, 0),\n    actual: income.reduce((acc, category) => {\n      return acc += category.actual;\n    }, 0),\n  }\n\n  const expensesBalance = {\n    prognosis: expenses.reduce((acc, category) => {\n      return acc += category.prognosis;\n    }, 0),\n    actual: expenses.reduce((acc, category) => {\n      return acc += category.actual;\n    }, 0),\n  }\n\n  return {\n    income: {\n      balance: incomeBalance,\n      categories: income\n    },\n    expenses: {\n      balance: expensesBalance,\n      categories: expenses\n    }\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// import { PlanningMonth } from '../../../../../../store/planning/planning.types';\nimport { getMonthNameByIndex } from '../../../../../../utils';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\ntype RouteParams = {\n  year?: string;\n}\n\nconst renderMonthButtons = (month: string, onClick: () => void) => {\n  return (\n    <Button\n      key={`month-${month}`}\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      {getMonthNameByIndex(month)}\n    </Button>\n  );\n}\n\nexport const Year: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams<RouteParams>();\n  const Store = useStore(params.year);\n\n  const getMonthClickHandler = React.useCallback((month: string) => () => {\n    history.push(`/planning/year-${params.year}/month-${month}`);\n  }, [history, params.year]);\n\n  return (\n    <div className={classes.paper}>\n      {Store.plan && Object.keys(Store.plan.months).map(month => {\n        const handler = getMonthClickHandler(month);\n        return renderMonthButtons(month, handler);\n      })}\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../../../store/store.types';\nimport { PlanningState, PlanningYear } from '../../../../../../store/planning/planning.types';\n\ntype Hook = {\n  plan: PlanningYear | undefined;\n}\n\nexport const useStore = (year: string | undefined): Hook => {\n  const numYear = year ? parseInt(year) : NaN;\n\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n\n  const plan = planning.plans.find((plan) => plan.year === numYear);\n\n  return {\n    plan,\n  }\n}","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { PlanningState, PlanningYear } from '../../../../store/planning/planning.types';\nimport { CategoriesState } from '../../../../store/categories/categories.types';\nimport * as PlanningActions from '../../../../store/planning/actions';\n\ntype Hook = {\n  plans: Array<PlanningYear>;\n  handleCreatePlanningYear: (year: number) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n  const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n\n  const handleCreatePlanningYear = React.useCallback((year: number) => {\n    dispatch(PlanningActions.createPlanningYear(year, categories));\n  }, [dispatch, categories]);\n\n  return {\n    plans: planning.plans,\n    handleCreatePlanningYear,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n","import * as React from 'react';\nimport { Route, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nimport { PlanningYear } from '../../../../store/planning/planning.types';\n\nimport { Year, Month } from './screens';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nconst renderYearButtons = (planningYear: PlanningYear, onClick: () => void) => {\n  const { year } = planningYear;\n  return (\n    <Button\n      key={`year-${year}`}\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={onClick}\n    >\n      {year}\n    </Button>\n  );\n}\n\nexport const Planning: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const Store = useStore();\n\n  const handleCreatePlanningYearClick = React.useCallback(() => {\n    Store.handleCreatePlanningYear(new Date().getFullYear());\n  }, [Store]);\n\n  const getPlanningYearClickHandler = React.useCallback((year: number) => () => {\n    history.push(`/planning/year-${year}`);\n  }, [history]);\n\n  return (\n    <>\n      <div className={classes.paper}>\n        {Store.plans.length === 0 && (\n          <>\n            <div>You don't have any plans!</div>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.button}\n              onClick={handleCreatePlanningYearClick}\n            >\n              Create\n          </Button>\n          </>\n        )}\n        {Store.plans.length > 0 && (\n          <div>{Store.plans.map(planningYear => {\n            const handler = getPlanningYearClickHandler(planningYear.year);\n            return renderYearButtons(planningYear, handler);\n          })}</div>\n        )}\n      </div>\n      <Route exact path=\"/planning/year-:year\">\n        <Year />\n      </Route>\n      <Route exact path=\"/planning/year-:year/month-:month\">\n        <Month />\n      </Route>\n    </>\n  );\n}","import { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { CategoriesState, Category, CategoryType } from '../../../../store/categories/categories.types';\nimport * as CategoriesActions from '../../../../store/categories/actions';\n\ntype Hook = {\n  income: Array<Category>;\n  expenses: Array<Category>;\n  onAddCategory: (categoryType: CategoryType, name: string) => void;\n  onUpdateCategory: (type: CategoryType, id: string, name: string) => void;\n  onDeleteCategory: (type: CategoryType, id: string) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n\n  const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n  const { income, expenses } = categories;\n\n  const handleAddCategory = (type: CategoryType, name: string): void => {\n    if (name) {\n      const category: Category = {\n        id: `f${(+new Date()).toString(16)}`,\n        type,\n        name,\n      };\n      dispatch(CategoriesActions.addCategory(category))\n    }\n  }\n\n  const handleUpdateCategory = (type: CategoryType, id: string, name: string): void => {\n    if (id && name) {\n      const category: Category = {\n        id,\n        type,\n        name,\n      };\n      dispatch(CategoriesActions.updateCategory(category))\n    }\n  }\n\n  const handleDeleteCategory = (type: CategoryType, id: string): void => {\n    if (id && type) {\n      dispatch(CategoriesActions.deleteCategory(type, id))\n    }\n  }\n\n  return {\n    income,\n    expenses,\n    onAddCategory: handleAddCategory,\n    onUpdateCategory: handleUpdateCategory,\n    onDeleteCategory: handleDeleteCategory,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tableWrapper: {\n    marginTop: 24,\n  }\n}));\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/EditOutlined';\nimport Search from '@material-ui/icons/Search';\n\nimport { Category, CategoryType } from '../../../../store/categories/categories.types';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nconst COLUMNS = [\n  { title: 'category', field: 'name' },\n];\n\nconst tableIcons = {\n  Add: React.forwardRef((props: any, ref) => <AddBox {...props} ref={ref} />),\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Delete: React.forwardRef((props: any, ref) => <DeleteOutline {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  ResetSearch: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Search: React.forwardRef((props: any, ref) => <Search {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nconst renderTable = (\n  categories: Array<Category>,\n  title: string,\n  onRowAdd: (newData: any) => Promise<void>,\n  onRowUpdate: (newData: any, oldData: any) => Promise<void>,\n  onRowDelete: (oldData: any) => Promise<void>,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <MaterialTable\n        title={title}\n        columns={COLUMNS}\n        data={categories}\n        editable={{\n          onRowAdd,\n          onRowUpdate,\n          onRowDelete,\n        }}\n        icons={tableIcons as any}\n        options={{\n          paging: false,\n          search: false,\n        }}\n        localization={{\n          header: {\n            actions: '',\n          },\n          body: {\n            editRow: {\n              deleteText: 'Видалити цю категорію?',\n            },\n            deleteTooltip: 'Видалити'\n          }\n        }}\n      />\n    </Grid>\n  );\n\nexport const Categories: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const getRowAddHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any): Promise<void> => {\n      Store.onAddCategory(categoryType, data.name);\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  const getRowUpdateHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any, oldData: any): Promise<void> => {\n      Store.onUpdateCategory(categoryType, data.id, data.name)\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  const getRowDeleteHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any): Promise<void> => {\n      const { id } = data;\n      Store.onDeleteCategory(categoryType, id);\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  return (\n    <div className={classes.paper}>\n      <Grid container spacing={4} className={classes.tableWrapper}>\n        {renderTable(\n          Store.expenses,\n          'Expenses',\n          getRowAddHandler('expenses'),\n          getRowUpdateHandler('expenses'),\n          getRowDeleteHandler('expenses')\n        )}\n        {renderTable(\n          Store.income,\n          'Income',\n          getRowAddHandler('income'),\n          getRowUpdateHandler('income'),\n          getRowDeleteHandler('income')\n        )}\n      </Grid>\n    </div>\n  );\n}","type Method = 'get';\n\nconst req = (method: Method, url: string) => {\n  const authData = localStorage.getItem('persist:auth');\n  const headers = new Headers();\n  const fullUrl = `https://api.monobank.ua/${url}`;\n\n  if (authData) {\n    const { token } = JSON.parse(authData);\n    if (token) {\n      headers.append('X-Token', token.substring(1, token.length - 1));\n    }\n  }\n\n  return fetch(fullUrl, {\n    method,\n    headers,\n  })\n}\n\nexport const get = (url: string) => req('get', url);\n","import * as client from './client';\n\n// import { MOCK_USER_INFO } from './mock-data';\n\ntype ResPersonalClientInfo = {\n  clientId: string;\n  name: string;\n  webHookUrl: string;\n  accounts: Array<any>;\n}\n\nexport const getUserInfo = async (): Promise<string | null> => {\n  try {\n    const res = await client.get('personal/client-info');\n    const data = await res.json();\n    const { name } = data as any as ResPersonalClientInfo;\n\n    return name;\n  } catch (e) {\n    console.log(e);\n  }\n  return null;\n  // const { name } = MOCK_USER_INFO;\n\n  // return Promise.resolve(name);\n}\n","import * as client from './client';\nimport { StatementRecord } from '../store/statement/statement.types';\n\n// import { MOCK_STATEMENT } from './mock-data';\n\ntype ResPersonalStatement = Array<StatementRecord>;\n\n// const generateEmptyItems = (month: number): Array<StatementRecord> => {\n//   const maxDays = new Date(2020, month, 0).getDate();\n//   const items: Array<StatementRecord> = [];\n\n//   for (let i = 0; i < maxDays; i += 1) {\n//     items.push({\n//       time: new Date(`2020.${month}.${i}`).getTime() / 1000,\n//       amount: 0,\n//       balance: 0,\n//     });\n//   }\n\n//   return items;\n// }\n\nexport const getForMonth = async (month: number): Promise<ResPersonalStatement> => {\n  const unixStart = new Date(`2020.${month}.01`).getTime() / 1000;\n  const unixEnd = new Date(`2020.${month}.${new Date(2020, month, 0).getDate()}`).getTime() / 1000;\n\n  // return Promise.resolve(MOCK_STATEMENT);\n\n  try {\n    const res = await client.get(`personal/statement/0/${unixStart}/${unixEnd}`);\n    const data = await res.json();\n\n    if (data && data.length > 0) {\n      const items = data as any as ResPersonalStatement;\n\n      return items;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return [];\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as UserApi from '../../api/user';\nimport * as StatementApi from '../../api/statement';\nimport { RootState } from '../../store/store.types';\nimport { UserState } from '../../store/user/user.types';\nimport * as AuthActions from '../../store/auth/actions';\nimport * as UserActions from '../../store/user/actions';\nimport * as StatementActions from '../../store/statement/actions';\n\ntype Hook = {\n  userName: string;\n  onRemoveToken: () => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const onRemoveToken = () => {\n    dispatch(AuthActions.removeToken());\n  }\n\n  const getUserInfo = React.useCallback(async () => {\n    const userName = await UserApi.getUserInfo();\n    if (userName) {\n      dispatch(UserActions.setName(userName));\n    }\n  }, [dispatch]);\n\n  const getStatementCurrentMonth = React.useCallback(async (month: number) => {\n    const items = await StatementApi.getForMonth(month);\n    dispatch(StatementActions.setStatement(items));\n  }, [dispatch]);\n\n  const getCurrentMonth = React.useCallback(() => {\n    const month = new Date().getMonth();\n    dispatch(UserActions.setMonth(month));\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    getUserInfo();\n    getCurrentMonth();\n  }, [getUserInfo, getCurrentMonth]);\n\n  React.useEffect(() => {\n    getStatementCurrentMonth(user.month);\n  }, [getStatementCurrentMonth, user.month]);\n\n  return {\n    userName: user.name,\n    onRemoveToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n","import * as React from 'react';\nimport { Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport { SideMenu, Header, Breadcrumbs } from './components';\nimport { Dashboard, Planning, Categories } from './screens';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const User: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n\n  const handleDrawerToggle = React.useCallback(() => {\n    console.log(drawerOpen, !drawerOpen)\n    setDrawerOpen(!drawerOpen);\n  }, [drawerOpen, setDrawerOpen]);\n\n  const handleLogout = React.useCallback(() => {\n    Store.onRemoveToken();\n  }, [Store]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header\n        drawerOpen={drawerOpen}\n        onDrawerToggleClick={handleDrawerToggle}\n        onLogout={handleLogout}\n      />\n      <SideMenu\n        drawerOpen={drawerOpen}\n        userName={Store.userName}\n        onDrawerToggleClick={handleDrawerToggle}\n      />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Breadcrumbs />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* <MonthSelect /> */}\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/planning\">\n            <Planning />\n          </Route>\n          <Route path=\"/categories\">\n            <Categories />\n          </Route>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../store/store.types';\nimport { AuthState } from '../store/auth/auth.types';\n\ntype Hook = boolean;\n\nexport const useAuth = (): Hook => {\n  const { token } = useSelector<RootState, AuthState>(state => state.auth);\n\n  return !!token;\n}","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const PrivateRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const LoginRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from '../store';\nimport { Login, User } from '../screens';\n\nimport { LoginRoute, PrivateRoute } from './components';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#43a047',\n    },\n    secondary: {\n      main: '#388e3c'\n    }\n  }\n});\n\nconst AppInner: React.FC = () => {\n  return (\n    <Switch>\n      <LoginRoute path=\"/login\">\n        <Login />\n      </LoginRoute>\n      <PrivateRoute path=\"/\">\n        <User />\n      </PrivateRoute>\n    </Switch>\n  );\n}\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <Router basename=\"/monoplan-poc\">\n            <AppInner />\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}