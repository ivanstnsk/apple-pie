{"version":3,"sources":["store/auth/actions.ts","store/user/actions.ts","store/auth/reducer.ts","store/statement/actions.ts","store/user/reducer.ts","store/planning/actions.ts","store/statement/reducer.ts","store/categories/actions.ts","store/planning/reducer.ts","store/categories/reducer.ts","store/reducer.ts","store/store.ts","screens/Login/useStore.ts","screens/Login/styles.ts","screens/Login/Login.tsx","screens/User/components/SideMenu/styles.ts","screens/User/components/SideMenu/SideMenu.tsx","screens/User/components/Header/styles.ts","screens/User/components/Header/Header.tsx","screens/User/components/MonthSelect/styles.ts","utils/month.ts","screens/User/components/Breadcrumbs/styles.ts","screens/User/components/Breadcrumbs/Breadcrumbs.tsx","screens/User/screens/Dashboard/components/MoneyChart/styles.ts","screens/User/screens/Dashboard/components/MoneyChart/MoneyChart.tsx","screens/User/screens/Dashboard/styles.ts","screens/User/screens/Dashboard/Dashboard.tsx","screens/User/screens/Dashboard/useStore.ts","screens/User/screens/Planning/screens/Month/components/ProgressBar/ProgressBar.tsx","screens/User/screens/Planning/screens/Month/styles.ts","screens/User/screens/Planning/screens/Month/Month.tsx","screens/User/screens/Planning/screens/Month/useStore.ts","screens/User/screens/Planning/screens/Year/useStore.ts","screens/User/screens/Planning/screens/Year/styles.ts","screens/User/screens/Planning/screens/Year/Year.tsx","screens/User/screens/Planning/useStore.ts","screens/User/screens/Planning/styles.ts","screens/User/screens/Planning/Planning.tsx","screens/User/screens/Categories/useStore.ts","screens/User/screens/Categories/styles.ts","screens/User/screens/Categories/Categories.tsx","screens/User/useStore.ts","screens/User/styles.ts","screens/User/User.tsx","hooks/useAuth.ts","App/components/PrivateRoute/PrivateRoute.tsx","App/components/LoginRoute/LoginRoute.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["AuthActions","UserActions","initState","token","StatementActions","name","month","PlanningActions","items","CategoryActions","plans","income","expenses","authPersistConfig","key","storage","planningPersistConfig","categoriesPersistConfig","reducer","combineReducers","auth","persistReducer","state","type","payload","SetToken","RemoveToken","user","SetName","SetMonth","statement","SetStatement","planning","CreateYear","year","newYear","months","RemoveYear","CreateMonth","newMonth","RemoveMonth","categories","AddCategory","category","filter","cat","id","categoriesWithSameName","length","push","UpdateCategory","targetIndex","findIndex","Array","from","DeleteCategory","splice","store","createStore","composeWithDevTools","persistor","persistStore","useStore","dispatch","useDispatch","onSetToken","setToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","Store","React","handleTokenChange","event","target","value","handleLoginClick","preventDefault","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","label","autoComplete","onChange","Button","color","onClick","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","justifyContent","padding","mixins","toolbar","appBarSpacer","content","flexGrow","height","overflow","container","paddingTop","paddingBottom","fixedHeight","userContainer","userName","userNameHidden","dateContainer","date","dateHidden","SideMenu","drawerOpen","onDrawerToggleClick","history","Router","drawerClasses","clsx","userNameClasses","dateClasses","getNavigateClickHandler","path","Drawer","open","IconButton","Divider","split","reduce","acc","substring","toUpperCase","List","ListItem","button","ListItemIcon","ListItemText","primary","renderItems","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","title","paddingRight","Header","onLogout","pageTitle","pathname","getPageTitle","useLocation","appClasses","drawIconClasses","AppBar","Toolbar","edge","aria-label","noWrap","modal","left","top","transform","outline","modalInner","flex","flexWrap","MONTHS","getMonthNameByIndex","wrapper","paddingLeft","renderBreadcrumbs","chunks","getClickHandler","map","chunk","index","fullPath","slice","sliceIndex","last","finalLabel","startsWith","Link","href","renderLink","Breadcrumbs","location","useHistory","getBreadcrumbClickHandler","MoneyChart","chartData","activeTab","setActiveTab","handleChangeActiveTab","tab","Grid","item","xs","md","lg","Paper","Tabs","Tab","data","valueField","argumentField","Dashboard","useSelector","dates","Map","maxDays","Date","getDate","i","day","set","minus","plus","forEach","time","amount","m","balance","entry","get","statementGroupedByDay","ProgressBar","progress","fillerStyles","borderRadius","style","titleContainer","marginBottom","card","cardDetails","tableWrapper","CATEGORIES_COLUMNS","field","editable","tableIcons","Check","props","ref","Clear","Edit","SortArrow","renderBalanceTable","Card","CardContent","prognosis","actual","renderCategoriesTable2","onRowUpdate","columns","icons","options","paging","search","localization","header","actions","body","editRow","deleteText","deleteTooltip","Month","params","useParams","yearKey","parseInt","NaN","monthKey","monthPlan","plan","getRowUpdateHandler","categoryType","oldData","a","console","log","Promise","resolve","planningYear","handleCreateMonth","handleRemoveMonth","empty","isEmpty","invalid","selectMonth","monthCell","borderBottom","buttonCell","Add","Delete","ResetSearch","Search","getRenderEditField","columnDef","Select","labelId","displayEmpty","e","MenuItem","disabled","fill","_","getRenderCell","getMonthOpenHandler","tableData","columnOrder","rowData","Year","handleAddMonth","Object","values","onRowAdd","onRowDelete","components","EditField","Cell","handleCreateYear","handleRemoveYear","selectYear","yearCell","getYearOpenHandler","Planning","handleAddYear","exact","onAddCategory","toString","CategoriesActions","onUpdateCategory","onDeleteCategory","COLUMNS","renderTable","Categories","getRowAddHandler","getRowDeleteHandler","onRemoveToken","root","User","setDrawerOpen","handleDrawerToggle","handleLogout","useAuth","PrivateRoute","children","rest","isAuthorized","render","to","LoginRoute","createMuiTheme","AppInner","App","ThemeProvider","basename","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qLAEYA,E,2JAAAA,K,yBAAAA,E,gCAAAA,M,KAUL,ICVKC,ECKNC,EAAuB,CAC3BC,MAAO,K,SDNGF,K,uBAAAA,E,0BAAAA,M,KAUL,IERKG,ECGNF,EAAuB,CAC3BG,KAAM,GACNC,MAAO,I,SDLGF,K,uCAAAA,M,KASL,IEXKG,ECKNL,EAA4B,CAChCM,MAAO,I,kBDNGD,K,iCAAAA,E,iCAAAA,E,mCAAAA,E,oCAAAA,M,KAYL,IEVKE,ECGNP,EAA2B,CAC/BQ,MAAO,K,SDJGD,K,qCAAAA,E,2CAAAA,E,4CAAAA,M,KAWL,IERDP,EAA6B,CACjCS,OAAQ,GACRC,SAAU,ICGNC,EAAoB,CACxBC,IAAK,OACLC,QAASA,KAGLC,EAAwB,CAC5BF,IAAK,WACLC,QAASA,KAGLE,EAA0B,CAC9BH,IAAK,aACLC,QAASA,KAGEG,EAAUC,0BAA2B,CAChDC,KAAMC,YAAeR,GRjBiB,WAGlC,IAFJS,EAEG,uDAFKpB,EAEL,yCADDqB,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKvB,EAAYyB,SACf,OAAO,eACFH,EADL,CAEEnB,MAAOqB,IAEX,KAAKxB,EAAY0B,YACf,OAAO,eACFJ,EADL,CAEEnB,MAAO,OAEX,QACE,OAAOmB,MQEXK,KNjBsC,WAGlC,IAFJL,EAEG,uDAFKpB,EAEL,yCADDqB,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKtB,EAAY2B,QACf,OAAO,eACFN,EADL,CAEEjB,KAAMmB,IAEV,KAAKvB,EAAY4B,SACf,OAAO,eACFP,EADL,CAEEhB,MAAOkB,IAEX,QACE,OAAOF,IMEXQ,UJnBgD,WAG5C,IAFJR,EAEG,uDAFKpB,EAEL,yCADDqB,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKnB,EAAiB2B,aACpB,OAAO,eACFT,EADL,CAEEd,MAAOgB,IAEX,QACE,OAAOF,IISXU,SAAUX,YAAeL,GFpBqB,WAG1C,IAFJM,EAEG,uDAFKpB,EAEL,yCADDqB,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKhB,EAAgB0B,WACnB,IAAMC,EAAOV,EAEb,GAAIF,EAAMZ,MAAMwB,GACd,OAAOZ,EAGT,IAAMa,EAAwB,CAC5BD,OACAE,OAAQ,IAGV,OAAO,eACFd,EADL,CAEEZ,MAAM,eACDY,EAAMZ,MADN,eAEFwB,EAAOC,MAId,KAAK5B,EAAgB8B,WACnB,IAAMH,EAAOV,EAEb,IAAKF,EAAMZ,MAAMwB,GACf,OAAOZ,EAGT,IAAMZ,EAAQY,EAAMZ,MAGpB,cAFOA,EAAMwB,GAEN,eACFZ,EADL,CAEEZ,UAGJ,KAAKH,EAAgB+B,YAAc,IAAD,EACRd,EAAhBU,EADwB,EACxBA,KAAM5B,EADkB,EAClBA,MAEd,IAAKgB,EAAMZ,MAAMwB,GACf,OAAOZ,EAET,GAAIhB,EAAQ,GAAKA,EAAQ,GACvB,OAAOgB,EAGT,IAAMiB,EAA0B,CAC9BjC,QACAK,OAAQ,GACRC,SAAU,IAGZ,OAAO,eACFU,EADL,CAEEZ,MAAM,eACDY,EAAMZ,MADN,eAEFwB,EAAO,CACNA,OACAE,OAAO,eACFd,EAAMZ,MAAMwB,GAAME,OADjB,eAEH9B,EAAQiC,SAMnB,KAAKhC,EAAgBiC,YAAc,IAAD,EACRhB,EAAhBU,EADwB,EACxBA,KAAM5B,EADkB,EAClBA,MAEd,IAAKgB,EAAMZ,MAAMwB,GACf,OAAOZ,EAET,GAAIhB,EAAQ,GAAKA,EAAQ,GACvB,OAAOgB,EAGT,IAAMc,EAASd,EAAMZ,MAAMwB,GAAME,OAGjC,cAFOA,EAAO9B,GAEP,eACFgB,EADL,CAEEZ,MAAM,eACDY,EAAMZ,MADN,eAEFwB,EAAO,CACNA,OACAE,cAKR,QACE,OAAOd,ME1EXmB,WAAYpB,YAAeJ,GDpBsB,WAG7C,IAFJK,EAEG,uDAFKpB,EAEL,yCADDqB,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKd,EAAgBiC,YACnB,IAAMC,EAAWnB,EACXhB,EAAQc,EAAMqB,EAASpB,MAAMqB,QAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,EAASG,MAE/DC,EAAyBzB,EAAMqB,EAASpB,MAAMqB,QAAO,SAAAC,GAAG,OAAIA,EAAIxC,OAASsC,EAAStC,QACxF,OAAI0C,EAAuBC,OAAS,EAC3B1B,GAGTd,EAAMyC,KAAKN,GAEJ,eACFrB,EADL,eAEGqB,EAASpB,KAAOf,KAGrB,KAAKC,EAAgByC,eACnB,IAAMP,EAAWnB,EACX2B,EAAc7B,EAAMqB,EAASpB,MAAM6B,WAAU,SAAAP,GAAG,OAAIA,EAAIC,KAAOH,EAASG,MAE9E,GAAIK,EAAc,EAChB,OAAO7B,EAGT,IAAMyB,EAAyBzB,EAAMqB,EAASpB,MAAMqB,QAAO,SAAAC,GAAG,OAAIA,EAAIxC,OAASsC,EAAStC,QACxF,GAAI0C,EAAuBC,OAAS,EAClC,OAAO1B,EAGT,IAAMd,EAAQ6C,MAAMC,KAAKhC,EAAMqB,EAASpB,OAExC,OADAf,EAAM2C,GAAN,eAA0BR,GACnB,eACFrB,EADL,eAEGqB,EAASpB,KAAOf,IAGrB,KAAKC,EAAgB8C,eAAiB,IAAD,EACd/B,EAAbsB,EAD2B,EAC3BA,GAAIvB,EADuB,EACvBA,KACN4B,EAAc7B,EAAMC,GAAM6B,WAAU,SAAAP,GAAG,OAAIA,EAAIC,KAAOA,KAE5D,GAAIK,EAAc,EAChB,OAAO7B,EAGT,IAAMd,EAAQ6C,MAAMC,KAAKhC,EAAMC,IAE/B,OADAf,EAAMgD,OAAOL,EAAa,GACnB,eACF7B,EADL,eAEGC,EAAOf,IAGZ,QACE,OAAOc,QE/DAmC,EAAQC,sBACnBxC,EACA,GACAyC,iCAGWC,EAAYC,YAAaJ,G,+ECJzBK,EAAW,WACtB,IAAMC,EAAWC,cAQjB,MAAO,CACLC,WAPiB,SAAC9D,GACdA,GAASA,EAAM6C,OAAS,GAC1Be,EZDkB,SAAC5D,GACvB,MAAO,CACLoB,KAAMvB,EAAYyB,SAClBD,QAASrB,GYFE+D,CAAS/D,O,SCXXgE,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QCNnBa,EAAkB,WAC7B,IAAMC,EAAUnB,IACVoB,EAAQzB,IAFqB,EAIT0B,WAAuB,IAJd,mBAI5BrF,EAJ4B,KAIrB+D,EAJqB,KAM7BuB,EAAoBD,eAAkB,SAACE,GAC3CxB,EAASwB,EAAMC,OAAOC,SACrB,CAAC1B,IAEE2B,EAAmBL,eAAkB,SAACE,GAC1CA,EAAMI,iBACNP,EAAMtB,WAAW9D,KAChB,CAACoF,EAAOpF,IAEX,OACE,gBAAC4F,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,gBAACC,EAAA,EAAD,MACA,uBAAKC,UAAWb,EAAQhB,OACtB,gBAAC8B,EAAA,EAAD,CAAQD,UAAWb,EAAQV,QACzB,gBAAC,IAAD,OAEF,gBAACyB,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,uCAGA,wBAAMH,UAAWb,EAAQJ,KAAMqB,YAAU,GACvC,gBAACC,EAAA,EAAD,CACEF,QAAQ,WACRzB,OAAO,SACP4B,UAAQ,EACRC,WAAS,EACTrG,KAAK,QACLsG,MAAM,QACNpF,KAAK,WACLuB,GAAG,QACH8D,aAAa,OACbhB,MAAOzF,EACP0G,SAAUpB,IAEZ,gBAACqB,EAAA,EAAD,CACEvF,KAAK,SACLmF,WAAS,EACTJ,QAAQ,YACRS,MAAM,UACNZ,UAAWb,EAAQF,OACnB4B,QAASnB,GANX,4F,2JC/CG1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C4C,YAAa,CACXC,SAAU,WACVC,WAAY,SACZhC,MANiB,IAOjBiC,WAAY/C,EAAMgD,YAAYC,OAAO,QAAS,CAC5CC,OAAQlD,EAAMgD,YAAYE,OAAOC,MACjCC,SAAUpD,EAAMgD,YAAYI,SAASC,kBAGzCC,iBAAiB,aACfC,UAAW,SACXR,WAAY/C,EAAMgD,YAAYC,OAAO,QAAS,CAC5CC,OAAQlD,EAAMgD,YAAYE,OAAOC,MACjCC,SAAUpD,EAAMgD,YAAYI,SAASI,gBAEvC1C,MAAOd,EAAMG,QAAQ,IACpBH,EAAMyD,YAAYC,GAAG,MAAQ,CAC5B5C,MAAOd,EAAMG,QAAQ,KAGzBwD,YAAY,aACVvD,QAAS,OACTE,WAAY,SACZsD,eAAgB,WAChBC,QAAS,SACN7D,EAAM8D,OAAOC,SAIlBC,aAAchE,EAAM8D,OAAOC,QAC3BE,QAAS,CACPC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAYtE,EAAMG,QAAQ,GAC1BoE,cAAevE,EAAMG,QAAQ,IAE/BF,MAAO,CACL4D,QAAS7D,EAAMG,QAAQ,GACvBC,QAAS,OACTgE,SAAU,OACV/D,cAAe,UAEjBmE,YAAa,CACXL,OAAQ,KAGVM,cAAe,CACbrE,QAAS,OACTC,cAAe,SACfC,WAAY,SACZgE,WAAY,GACZC,cAAe,IAEjBG,SAAU,CACRtE,QAAS,WAEXuE,eAAgB,CACdvE,QAAS,QAEXwE,cAAe,CACbxE,QAAS,OACTC,cAAe,SACfC,WAAY,SACZgE,WAAY,GACZC,cAAe,IAEjBM,KAAM,CACJzE,QAAS,WAEX0E,WAAY,CACV1E,QAAS,YCzBA2E,GAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,WACAN,EAEI,EAFJA,SACAO,EACI,EADJA,oBAEMhE,EAAUnB,KACVoF,EAAUC,MAEVC,EAAgB,CACpBnF,MAAOoF,YAAKpE,EAAQ2B,aAAcoC,GAAc/D,EAAQqC,mBAEpDgC,EAAkBD,YAAKpE,EAAQyD,UAAWM,GAAc/D,EAAQ0D,gBAChEY,EAAcF,YAAKpE,EAAQ4D,MAAOG,GAAc/D,EAAQ6D,YAExDU,EAA0BrE,eAAkB,SAACsE,GAAD,OAAkB,WAClEP,EAAQtG,KAAK6G,MACZ,CAACP,IAEJ,OACE,gBAACQ,EAAA,EAAD,CACEzD,QAAQ,YACRhB,QAASmE,EACTO,KAAMX,GAEN,uBAAKlD,UAAWb,EAAQ0C,aACtB,gBAACiC,EAAA,EAAD,CAAYjD,QAASsC,GACnB,gBAAC,IAAD,QAGJ,gBAACY,GAAA,EAAD,MACA,uBAAK/D,UAAWb,EAAQwD,eACtB,gBAAC1C,EAAA,EAAD,KAA8B2C,EAhErBoB,MAAM,KACZC,QAAO,SAACC,EAAKzE,GAAN,OAAgByE,EAAOzE,EAAM0E,UAAU,EAAG,GAAGC,gBAAe,KAgEtE,uBAAKpE,UAAWwD,GACd,gBAACtD,EAAA,EAAD,CAAYC,QAAQ,MAAMyC,KAG9B,gBAACmB,GAAA,EAAD,MACA,uBAAK/D,UAAWb,EAAQ2D,eACtB,uBAAK9C,UAAWyD,GACd,gBAACvD,EAAA,EAAD,CAAYC,QAAQ,SAApB,+CAGJ,gBAAC4D,GAAA,EAAD,MACA,gBAACM,GAAA,EAAD,KAxEc,SAACX,GAAD,OAClB,gCACE,gBAACY,GAAA,EAAD,CAAUC,QAAM,EAAC1D,QAAS6C,EAAwB,cAChD,gBAACc,GAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACC,GAAA,EAAD,CAAcC,QAAQ,kEAExB,gBAACJ,GAAA,EAAD,CAAUC,QAAM,EAAC1D,QAAS6C,EAAwB,gBAChD,gBAACc,GAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACC,GAAA,EAAD,CAAcC,QAAQ,mJAExB,gBAACJ,GAAA,EAAD,CAAUC,QAAM,EAAC1D,QAAS6C,EAAwB,eAChD,gBAACc,GAAA,EAAD,KACE,gBAAC,KAAD,OAEF,gBAACC,GAAA,EAAD,CAAcC,QAAQ,iDAuDnBC,CAAYjB,M,8DC7FR1F,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C0G,OAAQ,CACNC,OAAQ3G,EAAM2G,OAAOC,OAAS,EAC9B7D,WAAY/C,EAAMgD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlD,EAAMgD,YAAYE,OAAOC,MACjCC,SAAUpD,EAAMgD,YAAYI,SAASI,iBAGzCqD,YAAa,CACXC,WAXiB,IAYjBhG,MAAM,eAAD,OAZY,IAYZ,OACLiC,WAAY/C,EAAMgD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQlD,EAAMgD,YAAYE,OAAOC,MACjCC,SAAUpD,EAAMgD,YAAYI,SAASC,kBAGzC0D,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChB7G,QAAS,QAEX8G,MAAO,CACLhD,SAAU,GAEZH,QAAS,CACPoD,aAAc,QCCLC,GAA0B,SAAC,GAIjC,IAHLpC,EAGI,EAHJA,WACAC,EAEI,EAFJA,oBACAoC,EACI,EADJA,SAEMpG,EAAUnB,KAEVwH,EApBa,SAACC,GACpB,OAAQA,GACN,IAAK,YACH,MAAO,+DACT,IAAK,aACH,MAAO,6CACT,IAAK,cACH,MAAO,gJACT,QACE,MAAO,IAWOC,CADDC,cACuBF,UAElCG,EAAarC,YAAKpE,EAAQyF,OAAQ1B,GAAc/D,EAAQ4F,aACxDc,EAAkBtC,YAAKpE,EAAQ8F,WAAY/B,GAAc/D,EAAQgG,kBAEvE,OACE,gBAACW,GAAA,EAAD,CAAQ/E,SAAS,WAAWf,UAAW4F,GACrC,gBAACG,GAAA,EAAD,CAAS/F,UAAWb,EAAQ8C,SAC1B,gBAAC6B,EAAA,EAAD,CACEkC,KAAK,QACLpF,MAAM,UACNqF,aAAW,cACXpF,QAASsC,EACTnD,UAAW6F,GAEX,gBAAC,KAAD,OAEF,gBAAC3F,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAKS,MAAM,UAAUsF,QAAM,EAAClG,UAAWb,EAAQiG,OAC/EI,GAEH,gBAAC1B,EAAA,EAAD,CAAYlD,MAAM,UAAUC,QAAS0E,GACnC,gBAAC,KAAD,U,8BCzDetH,aAAW,SAACC,GAAD,MAAY,CAC9CqE,UAAW,CACTjE,QAAS,OACTC,cAAe,MACfC,WAAY,SACZsD,eAAgB,cAElBqE,MAAO,CACLrG,SAAU,IACVd,MAAO,OACPqD,OAAQ,IACRtB,SAAU,WACVqF,KAAM,MACNC,IAAK,MACLC,UAAW,4BACXC,QAAS,QAEXC,WAAY,CACVlI,QAAS,OACTmI,KAAM,EACN3E,eAAgB,SAChBtD,WAAY,SACZkI,SAAU,OACVrE,OAAQ,QAEVkC,OAAQ,CACNS,WAAY,GACZE,YAAa,Q,kBC7BXyB,GAAS,CACb,EAAK,uCACL,EAAK,iCACL,EAAK,mDACL,EAAK,6CACL,EAAK,6CACL,EAAK,6CACL,EAAK,uCACL,EAAK,6CACL,EAAK,mDACL,EAAK,6CACL,GAAM,mDACN,GAAM,8CAIKC,GAAsB,SAACzM,GAClC,OAAOwM,GAAOxM,IAAU,iBCdb6D,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C2I,QAAS,CACPvI,QAAS,OACTwI,YAAa,GACbzB,aAAc,GACdjH,UAAW,QCkCT2I,GAAoB,SAACC,EAAkBC,GAC3C,OAAOD,EAAOE,KAAI,SAACC,EAAOC,GACxB,IAAMC,EAAWL,EACdM,MAAM,EAAGF,EAAQ,GACjBnD,QAAO,SAACC,EAAKzE,EAAO8H,GACnB,OAAOrD,EAAG,UAAOzE,GAAP,OAAe8H,EAAaH,EAAQ,IAAM,MACnD,IAIL,OA1Ce,SAACzD,EAAcnD,EAAeK,GAAuC,IAAlB2G,EAAiB,wDACjFC,EAAajH,EAEjB,GAAIA,EAAMkH,WAAW,SACnBD,EAAajH,EAAM2D,UAAU,EAAG3D,EAAM3D,aACjC,GAAI2D,EAAMkH,WAAW,UAAW,CACrC,IAAMvN,EAAQqG,EAAM2D,UAAU,EAAG3D,EAAM3D,QACvC4K,EAAab,GAAoBzM,GAGnC,OAAIqN,EAEA,gBAACtH,EAAA,EAAD,CACEvF,IAAK8M,EACL7G,MAAM,eAEL6G,GAKL,gBAACE,GAAA,EAAD,CACEhN,IAAKgJ,EACL/C,MAAM,UACNgH,KAAMjE,EACN9C,QAASA,GAER4G,GAeII,CAAWR,EAAUF,EAHZF,EAAgBI,GACjBD,IAAUJ,EAAOnK,OAAS,OAMhCiL,GAAwB,WACnC,IAAM3I,EAAUnB,KACV+J,EAAWpC,cACXvC,EAAU4E,cACVhB,EAASe,EAAStC,SAASzB,MAAM,KAEjCiE,EAA4B5I,eAAkB,SAACsE,GAAD,OAAkB,WACpEP,EAAQtG,KAAK6G,MACZ,CAACP,IAEJ,OACE,uBAAKpD,UAAWb,EAAQ0H,SACtB,gBAAC,KAAD,CAAeZ,aAAW,cACvBc,GAAkBC,EAAQiB,M,iDCnEtBjK,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLa,MAAO,YCyBEkJ,GAA8B,SAAC,GAErC,IADLC,EACI,EADJA,UAEMhJ,EAAUnB,KADZ,EAE8BqB,WAAyB,UAFvD,mBAEG+I,EAFH,KAEcC,EAFd,KAIEC,EAAwBjJ,eAAkB,SAACE,EAAYgJ,GAC3DF,EAAaE,KACZ,CAACF,IAEJ,OACE,gBAACG,GAAA,EAAD,CAAMjG,WAAS,EAAClE,QAAS,GACvB,gBAACmK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,gBAACC,GAAA,EAAD,CAAO7I,UAAWb,EAAQhB,OACxB,gBAAC2K,GAAA,EAAD,CACErJ,MAAO2I,EACP1H,SAAU4H,EACVrC,aAAW,uBAEX,gBAAC8C,GAAA,EAAD,CAAKvI,MAAM,uCAASf,MAAM,WAC1B,gBAACsJ,GAAA,EAAD,CAAKvI,MAAM,6CAAUf,MAAM,cAEd,WAAd2I,GACC,gBAAC,KAAD,CACEY,KAAMb,GAEN,gBAAC,KAAD,MACA,gBAAC,KAAD,MACA,gBAAC,KAAD,CACEjO,KAAK,OACL+O,WAAW,OACXC,cAAc,MACdtI,MAAM,YAER,gBAAC,KAAD,MACA,gBAAC,KAAD,OAGW,aAAdwH,GACC,gBAAC,KAAD,CACEY,KAAMb,GAEN,gBAAC,KAAD,MACA,gBAAC,KAAD,MACA,gBAAC,KAAD,CACEjO,KAAK,QACL+O,WAAW,QACXC,cAAc,MACdtI,MAAM,YAER,gBAAC,KAAD,MACA,gBAAC,KAAD,SAKR,gBAAC4H,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,gBAACC,GAAA,EAAD,mCCpFK7K,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,cCDH2K,GAAsB,WACjC,IAAMhK,EAAUnB,KACVoB,ECQgB,WAOtB,IANA,IAAMzD,EAAYyN,aAAuC,SAAAjO,GAAK,OAAIA,EAAMQ,aAClEH,EAAO4N,aAAkC,SAAAjO,GAAK,OAAIA,EAAMK,QAExD6N,EAAQ,IAAIC,IAEZC,EAAU,IAAIC,KAAK,KAAMhO,EAAKrB,MAAO,GAAGsP,UACrCC,EAAI,EAAGA,EAAIH,EAASG,GAAK,EAAG,CACnC,IAAMC,EAAG,UAAMD,GACfL,EAAMO,IAAID,EAAK,CACbA,MACAE,MAAO,EACPC,KAAM,IAIVnO,EAAUtB,MAAM0P,SAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OACzBC,GAD+C,EAAdC,QAC7BF,EAAS,KACbG,EAA+B,CACnCT,IAAI,GAAD,OAAK,IAAIH,KAAY,IAAPQ,GAAaP,WAC9BI,MAAOK,EAAI,EAAIA,EAAI,EACnBJ,KAAMI,EAAI,EAAIA,EAAI,GAEdzB,EAAOY,EAAMgB,IAAID,EAAMT,KAC7BS,EAAMP,OAASpB,EAAOA,EAAKoB,MAAQ,EACnCO,EAAMN,MAAQrB,EAAOA,EAAKqB,KAAO,EACjCT,EAAMO,IAAIQ,EAAMT,IAAKS,MAGvB,IAAME,EAAsD,GAQ5D,OAPAjB,EAAMU,SAAQ,SAACtK,GACb6K,EAAsBxN,KAAtB,eACK2C,EADL,CAEEoK,OAAsB,EAAfpK,EAAMoK,YAIV,CACLS,yBD9CY3M,GAEd,OACE,uBAAKqC,UAAWb,EAAQhB,OACtB,gBAAC,GAAD,CACEgK,UAAW/I,EAAMkL,0B,2OENZC,GAA+B,SAAC,GAGtC,IAFL3J,EAEI,EAFJA,MACA4J,EACI,EADJA,SAOMC,EAAe,CACnBpI,OAAQ,OACRrD,MAAM,GAAD,OAAKwL,EAAL,KACL7L,gBAAiBiC,EACjB8J,aAAc,WAGhB,OACE,uBAAKC,MAbiB,CACtBtI,OAAQ,GACR1D,gBAAiB,YAYf,uBAAKgM,MAAOF,MCvBLzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdoM,eAAgB,CACdC,aAAc,IAEhBC,KAAM,CACJxM,QAAS,QAEXyM,YAAa,CACXtE,KAAM,GAERuE,aAAc,CACZ5M,UAAW,QCOT6M,GAAqB,CACzB,CAAE7F,MAAO,WAAY8F,MAAO,OAAQC,SAAU,SAC9C,CAAE/F,MAAO,YAAa8F,MAAO,aAC7B,CAAE9F,MAAO,SAAU8F,MAAO,UAC1B,CAAE9F,MAAO,aAAc8F,MAAO,aAAcC,SAAU,UAGlDC,GAAa,CACjBC,MAAOhM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEC,MAAOnM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEE,KAAMpM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QAClEG,UAAWrM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,SAG5EI,GAAqB,SACzBvG,EACA+E,EACAhL,EACAyB,GAJyB,OAMvB,gBAAC4H,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAACzI,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAChCiF,GAEH,gBAACwG,GAAA,EAAD,CAAM5L,UAAWb,EAAQ2L,MACvB,uBAAK9K,UAAWb,EAAQ4L,aACtB,gBAACc,GAAA,EAAD,KACE,gBAACrD,GAAA,EAAD,CAAMjG,WAAS,GACb,gBAACiG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAACzI,EAAA,EAAD,CAAYL,UAAU,MAAMM,QAAQ,SAApC,cAEF,gBAACqI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAACzI,EAAA,EAAD,CAAYL,UAAU,MAAMM,QAAQ,SACjCgK,EAAQ2B,YAGb,gBAACtD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAAC,GAAD,CAAa/H,MAAOA,EAAO4J,SAAU,MAGzC,gBAAChC,GAAA,EAAD,CAAMjG,WAAS,GACb,gBAACiG,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAACzI,EAAA,EAAD,CAAYL,UAAU,MAAMM,QAAQ,SAApC,WAEF,gBAACqI,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAACzI,EAAA,EAAD,CAAYL,UAAU,MAAMM,QAAQ,SACjCgK,EAAQ4B,SAGb,gBAACvD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,gBAAC,GAAD,CAAa/H,MAAOA,EAAO4J,SAAU,YAS/CwB,GAAyB,SAC7B1P,EACA8I,EACA6G,GAH6B,OAK3B,gBAACzD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEvD,MAAOA,EACP8G,QAASjB,GACTjC,KAAM1M,EACN6O,SAAU,CACRc,eAEFE,MAAOf,GACPgB,QAAS,CACPC,QAAQ,EACRC,QAAQ,GAEVC,aAAc,CACZC,OAAQ,CACNC,QAAS,IAEXC,KAAM,CACJC,QAAS,CACPC,WAAY,yHAEdC,cAAe,yDAOdC,GAAkB,WAC7B,IAAM3N,EAAUnB,KACV+O,EAASC,cACT5N,ECpGgB,SAACrD,EAA0B5B,GACjD,IAAM8S,EAAUlR,EAAOmR,SAASnR,GAAQoR,IAClCC,EAAWjT,EAAQ+S,SAAS/S,GAASgT,IAMvCE,EAA2B,CAC7BlT,MAAOiT,EACP5S,OAAQ,GACRC,SAAU,IAGN6S,EAVWlE,aAAsC,SAAAjO,GAAK,OAAIA,EAAMU,YAUhDtB,MAAM0S,GACxBK,IACFD,EAAYC,EAAKrR,OAAOmR,IAhB2D,MAmBxDC,EAArB7S,EAnB6E,EAmB7EA,OAAQC,EAnBqE,EAmBrEA,SAgDhB,MAAO,CACLD,OAAQ,CACN2P,QApBkB,CACpB2B,UAAWtR,EAAOyJ,QAAO,SAACC,EAAK1H,GAC7B,OAAO0H,EAAO1H,EAASsP,YACtB,GACHC,OAAQvR,EAAOyJ,QAAO,SAACC,EAAK1H,GAC1B,OAAO0H,EAAO1H,EAASuP,SACtB,IAeDzP,WAAY9B,GAEdC,SAAU,CACR0P,QAfoB,CACtB2B,UAAWrR,EAASwJ,QAAO,SAACC,EAAK1H,GAC/B,OAAO0H,EAAO1H,EAASsP,YACtB,GACHC,OAAQtR,EAASwJ,QAAO,SAACC,EAAK1H,GAC5B,OAAO0H,EAAO1H,EAASuP,SACtB,IAUDzP,WAAY7B,ID0BFkD,CAASoP,EAAOhR,KAAMgR,EAAO5S,OAErCoT,EAAsBlO,eAAkB,SAACmO,GAC7C,gDAAO,WAAOxE,EAAWyE,GAAlB,UAAAC,EAAA,6DACLC,QAAQC,IAAI5E,GADP,kBAGE6E,QAAQC,WAHV,2CAAP,0DAKC,IAEH,OACE,uBAAK9N,UAAWb,EAAQhB,OACtB,gCACG4O,EAAO5S,OAAS4S,EAAOhR,MACtB,uBAAKiE,UAAWb,EAAQyL,gBACtB,gBAAC1K,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAAnC,UACMyG,GAAoBmG,EAAO5S,OADjC,YAC2C4S,EAAOhR,QAItD,gBAACyM,GAAA,EAAD,CAAMjG,WAAS,EAAClE,QAAS,GACtBsN,GACC,WACAvM,EAAM3E,SAAS0P,QACfhL,EACA,WAEDwM,GACC,SACAvM,EAAM5E,OAAO2P,QACbhL,EACA,YAIJ,gBAACqJ,GAAA,EAAD,CAAMjG,WAAS,EAAClE,QAAS,EAAG2B,UAAWb,EAAQ6L,cAC5CgB,GACC5M,EAAM3E,SAAS6B,WACf,WACAiR,EAAoB,aAErBvB,GACC5M,EAAM5E,OAAO8B,WACb,SACAiR,EAAoB,e,qBEpJnB5P,GAAW,SAAC5B,GACvB,IAAM6B,EAAWC,cAEXoP,EAAUlR,EAAOmR,SAASnR,GAAQoR,IAElCY,EADW3E,aAAsC,SAAAjO,GAAK,OAAIA,EAAMU,YACxCtB,MAAM0S,GAE9Be,EAAoB3O,eAAkB,SAACtD,EAAc5B,GACzDyD,E3BGuB,SAAC7B,EAAc5B,GACxC,MAAO,CACLiB,KAAMhB,EAAgB+B,YACtBd,QAAS,CACPU,OACA5B,U2BROC,CAA4B2B,EAAM5B,MAC1C,CAACyD,IAEEqQ,EAAoB5O,eAAkB,SAACtD,EAAc5B,GACzDyD,E3BSuB,SAAC7B,EAAc5B,GACxC,MAAO,CACLiB,KAAMhB,EAAgBiC,YACtBhB,QAAS,CACPU,OACA5B,U2BdOC,CAA4B2B,EAAM5B,MAC1C,CAACyD,IAEJ,OAAKmQ,EAUE,CACLhS,KAAMkR,EACNhR,OAAQ8R,EAAa9R,OACrBiS,MAAOC,KAAQJ,EAAa9R,QAC5BmS,SAAS,EACTJ,oBACAC,qBAfO,CACLC,OAAO,EACPE,SAAS,EACTnS,OAAQ,GACR+R,oBACAC,sBCpCOjQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEd6P,YAAa,CACXrP,MAAO,QAETsP,UAAW,CACTjM,OAAQ,OACRrD,MAAO,OACPuP,aAAc,oCAEhBC,WAAY,CACVnJ,aAAc,GACdyB,YAAa,GACbyH,aAAc,wCCOZtD,GAAqB,CACzB,CAAE7F,MAAO,QAAS8F,MAAO,SACzB,CAAE9F,MAAO,UAAW8F,MAAO,YAGvBE,GAAa,CACjBqD,IAAKpP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACnEF,MAAOhM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEC,MAAOnM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEmD,OAAQrP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QAC7EE,KAAMpM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QAClEoD,YAAatP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QAC1EqD,OAAQvP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACtEG,UAAWrM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,SAG5EsD,GAAqB,SACzB1P,EACAlD,GAFyB,OAGtB,SAACqP,GACJ,MAA8B,UAA1BA,EAAMwD,UAAU5D,MAEhB,gBAAC,mBAAoBI,GAKvB,gBAACyD,GAAA,EAAD,CACE/O,UAAWb,EAAQkP,YACnBW,QAAQ,eACRrS,GAAG,eACH8C,MAAO6L,EAAM7L,MACbwP,cAAY,EACZvO,SAAU,SAACwO,GAAD,OAAO5D,EAAM5K,SAASwO,EAAE1P,OAAOC,SAEzC,gBAAC0P,GAAA,EAAD,CAAUC,UAAQ,GAAlB,gBACC,IAAIlS,MAAM,IAAImS,KAAK,GAAGnI,KAAI,SAACoI,EAAG5F,GAC7B,IAAM0F,IAAWnT,KACXA,EAAOyN,GAGb,OACE,gBAACyF,GAAA,EAAD,CACExU,IAAG,uBAAkB+O,GACrBjK,MAAOiK,EACP0F,SAAUA,GAETxI,GAAoB,GAAD,OAAI8C,WAQ9B6F,GAAgB,SAACpQ,EAAcqQ,GAAf,OAA+D,SAAClE,GACpF,MAA8B,UAA1BA,EAAMwD,UAAU5D,MAEhB,sBAAIlL,UAAWb,EAAQmP,WACpB1H,GAAoB0E,EAAM7L,QAI7B6L,EAAMwD,UAAUW,UAAUC,cAAgBzE,GAAmBpO,OAAS,EAEtE,gCACE,gBAAC,cAAeyO,GAChB,sBAAItL,UAAWb,EAAQqP,YACrB,gBAAC7N,EAAA,EAAD,CACEvF,KAAK,SACL+E,QAAQ,YACRS,MAAM,UACNC,QAAS2O,EAAoBlE,EAAMqE,QAAQxV,QAJ7C,UAcN,gBAAC,cAAemR,KAIPsE,GAAiB,WAC5B,IAAMzQ,EAAUnB,KACVoF,EAAU4E,cACV+E,EAASC,cACT5N,EAAQzB,GAASoP,EAAOhR,MAExByT,EAAsBnQ,eAAkB,SAAClF,GAAD,OAAmB,WAC/DiJ,EAAQtG,KAAR,yBAA+BiQ,EAAOhR,KAAtC,kBAAoD5B,OACnD,CAACiJ,EAAS2J,EAAOhR,OAEd8T,EAAiBxQ,cAAA,yCAAkB,WAAO2J,GAAP,kBAAA0E,EAAA,6DACjC3R,EAAOgR,EAAOhR,KAAOmR,SAASH,EAAOhR,MAAQoR,IAC3ChT,EAAU6O,EAAV7O,MACRiF,EAAM4O,kBAAkBjS,EAAM5B,GAHS,kBAIhC0T,QAAQC,WAJwB,2CAAlB,sDAKpB,CAAC1O,EAAO2N,EAAOhR,OAEZkS,EAAoB5O,cAAA,yCAAkB,WAAO2J,GAAP,kBAAA0E,EAAA,6DACpC3R,EAAOgR,EAAOhR,KAAOmR,SAASH,EAAOhR,MAAQoR,IAC3ChT,EAAU6O,EAAV7O,MACRiF,EAAM6O,kBAAkBlS,EAAM5B,GAHY,kBAInC0T,QAAQC,WAJ2B,2CAAlB,sDAKvB,CAAC1O,EAAO2N,EAAOhR,OAElB,OACE,uBAAKiE,UAAWb,EAAQhB,OACtB,gBAACqK,GAAA,EAAD,CAAMjG,WAAS,GACZnD,EAAMgP,SACL,gBAAClO,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAU,OAAtC,gBAEDT,EAAM8O,OACL,2BACE,gBAAChO,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAU,OAAtC,oCAGFT,EAAMgP,SACN,gBAAC5F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,gBAAC,KAAD,CACEvD,MAAK,mBAAc2H,EAAOhR,KAArB,SACLmQ,QAASjB,GACTjC,KAAM8G,OAAOC,OAAO3Q,EAAMnD,QAC1BkQ,MAAOf,GACPD,SAAU,CACR6E,SAAUH,EACVI,YAAahC,GAEf7B,QAAS,CACPC,QAAQ,EACRC,QAAQ,GAEV4D,WAAY,CACVC,UAAWtB,GAAmB1P,EAASC,EAAMnD,QAC7CmU,KAAMb,GAAcpQ,EAASqQ,GAC7BlK,OAAQ,kBAAM,aCtJjB3H,GAAW,WACtB,IAAMC,EAAWC,cACXhC,EAAWuN,aAAsC,SAAAjO,GAAK,OAAIA,EAAMU,YAGhEwU,EAAmBhR,eAAkB,SAACtD,GAC1C6B,E9BRsB,SAAC7B,GACzB,MAAO,CACLX,KAAMhB,EAAgB0B,WACtBT,QAASU,G8BKA3B,CAA2B2B,MACnC,CAAC6B,IAEE0S,EAAmBjR,eAAkB,SAACtD,GAC1C6B,E9BLsB,SAAC7B,GACzB,MAAO,CACLX,KAAMhB,EAAgB8B,WACtBb,QAASU,G8BEA3B,CAA2B2B,MACnC,CAAC6B,IAEJ,MAAO,CACLrD,MAAOsB,EAAStB,MAChB2T,MAAOC,KAAQtS,EAAStB,OACxB8V,mBACAC,qBC/BStS,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEd+R,WAAY,CACVvR,MAAO,QAETwR,SAAU,CACRnO,OAAQ,OACRrD,MAAO,OACPuP,aAAc,oCAEhBC,WAAY,CACVnJ,aAAc,GACdyB,YAAa,GACbyH,aAAc,wCCGZtD,GAAqB,CACzB,CAAE7F,MAAO,OAAQ8F,MAAO,QACxB,CAAE9F,MAAO,UAAW8F,MAAO,YAGvB2D,GAAqB,SACzB1P,EACA5E,GAFyB,OAGtB,SAAC+Q,GACJ,MAA8B,SAA1BA,EAAMwD,UAAU5D,MAEhB,gBAAC,mBAAoBI,GAKvB,gBAACyD,GAAA,EAAD,CACE/O,UAAWb,EAAQoR,WACnBvB,QAAQ,eACRrS,GAAG,eACH8C,MAAO6L,EAAM7L,MACbwP,cAAY,EACZvO,SAAU,SAACwO,GAAD,OAAO5D,EAAM5K,SAASwO,EAAE1P,OAAOC,SAEzC,gBAAC0P,GAAA,EAAD,CAAUC,UAAQ,GAAlB,eACC,IAAIlS,MAAM,IAAImS,KAAK,GAAGnI,KAAI,SAACoI,EAAG5F,GAC7B,IAAM3N,EAAO2N,EAAI,KACX0F,IAAW7U,KACXA,EAAMwB,GAGZ,OACE,gBAACoT,GAAA,EAAD,CACExU,IAAG,sBAAiBoB,GACpB0D,MAAO1D,EACPqT,SAAUA,GAETrT,SAQPwT,GAAgB,SAACpQ,EAAcsR,GAAf,OAA6D,SAACnF,GAClF,MAA8B,SAA1BA,EAAMwD,UAAU5D,MAEhB,sBAAIlL,UAAWb,EAAQqR,UACpBlF,EAAM7L,OAIT6L,EAAMwD,UAAUW,UAAUC,cAAgBzE,GAAmBpO,OAAS,EAEtE,gCACE,gBAAC,cAAeyO,GAChB,sBAAItL,UAAWb,EAAQqP,YACrB,gBAAC7N,EAAA,EAAD,CACEvF,KAAK,SACL+E,QAAQ,YACRS,MAAM,UACNC,QAAS4P,EAAmBnF,EAAMqE,QAAQ5T,OAJ5C,UAcN,gBAAC,cAAeuP,KAIdF,GAAa,CACjBqD,IAAKpP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACnEF,MAAOhM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEC,MAAOnM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEmD,OAAQrP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QAC7EE,KAAMpM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QAClEoD,YAAatP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QAC1EqD,OAAQvP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACtEG,UAAWrM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,SAGrEmF,GAAqB,WAChC,IAAMvR,EAAUnB,KACVoF,EAAU4E,cACV5I,EAAQzB,KAER8S,EAAqBpR,eAAkB,SAACtD,GAAD,OAAkB,WAC7DqH,EAAQtG,KAAR,yBAA+Bf,OAC9B,CAACqH,IAEEuN,EAAgBtR,cAAA,yCAAkB,WAAO2J,GAAP,gBAAA0E,EAAA,6DAC9B3R,EAASiN,EAATjN,KACRqD,EAAMiR,iBAAiBtU,GAFe,kBAG/B8R,QAAQC,WAHuB,2CAAlB,sDAInB,CAAC1O,IAEEkR,EAAmBjR,cAAA,yCAAkB,WAAO2J,GAAP,gBAAA0E,EAAA,6DACjC3R,EAASiN,EAATjN,KACRqD,EAAMkR,iBAAiBvU,GAFkB,kBAGlC8R,QAAQC,WAH0B,2CAAlB,sDAItB,CAAC1O,IAEJ,OACE,gCACE,gBAAC,IAAD,CAAOwR,OAAK,EAACjN,KAAK,aAChB,uBAAK3D,UAAWb,EAAQhB,OACtB,gBAACqK,GAAA,EAAD,CAAMjG,WAAS,GACZnD,EAAM8O,OACL,2BACE,gBAAChO,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAU,OAAtC,kCAGJ,gBAAC2I,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,gBAAC,KAAD,CACEvD,MAAM,iBACN8G,QAASjB,GACTjC,KAAM8G,OAAOC,OAAO3Q,EAAM7E,OAC1B4R,MAAOf,GACPD,SAAU,CACR6E,SAAUW,EACVV,YAAaK,GAEflE,QAAS,CACPC,QAAQ,EACRC,QAAQ,GAEV4D,WAAY,CACVC,UAAWtB,GAAmB1P,EAASC,EAAM7E,OAC7C6V,KAAMb,GAAcpQ,EAASsR,GAC7BnL,OAAQ,kBAAM,aAO1B,gBAAC,IAAD,CAAOsL,OAAK,EAACjN,KAAK,wBAChB,gBAAC,GAAD,OAEF,gBAAC,IAAD,CAAOiN,OAAK,EAACjN,KAAK,qCAChB,gBAAC,GAAD,SC3JKhG,GAAW,WACtB,IAAMC,EAAWC,cAEXvB,EAAa8M,aAAwC,SAAAjO,GAAK,OAAIA,EAAMmB,cA+B1E,MAAO,CACL9B,OA/B2B8B,EAArB9B,OAgCNC,SAhC2B6B,EAAb7B,SAiCdoW,cA/BwB,SAACzV,EAAoBlB,GAC7C,GAAIA,EAAM,CACR,IAAMsC,EAAqB,CACzBG,GAAG,IAAD,SAAQ,IAAI6M,MAAQsH,SAAS,KAC/B1V,OACAlB,QAEF0D,E/BZqB,SAACpB,GAC1B,MAAO,CACLpB,KAAMd,EAAgBiC,YACtBlB,QAASmB,G+BSEuU,CAA8BvU,MAyBzCwU,iBArB2B,SAAC5V,EAAoBuB,EAAYzC,GACxDyC,GAAMzC,GAMR0D,E/BhBwB,SAACpB,GAC7B,MAAO,CACLpB,KAAMd,EAAgByC,eACtB1B,QAASmB,G+BaEuU,CALkB,CACzBpU,KACAvB,OACAlB,WAiBJ+W,iBAX2B,SAAC7V,EAAoBuB,GAC5CA,GAAMvB,GACRwC,E/BfwB,SAACxC,EAAoBuB,GACjD,MAAO,CACLvB,KAAMd,EAAgB8C,eACtB/B,QAAS,CACPD,OACAuB,O+BUSoU,CAAiC3V,EAAMuB,OC1CzCqB,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdwM,aAAc,CACZ5M,UAAW,QCMT8S,GAAU,CACd,CAAE9L,MAAO,WAAY8F,MAAO,SAGxBE,GAAa,CACjBqD,IAAKpP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACnEF,MAAOhM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEC,MAAOnM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACpEmD,OAAQrP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QAC7EE,KAAMpM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QAClEoD,YAAatP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QAC1EqD,OAAQvP,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACtEG,UAAWrM,cAAiB,SAACiM,EAAYC,GAAb,OAAqB,gBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,SAG5E4F,GAAc,SAClB7U,EACA8I,EACA4K,EACA/D,EACAgE,GALkB,OAOhB,gBAACzH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAD,CACEvD,MAAOA,EACP8G,QAASgF,GACTlI,KAAM1M,EACN6O,SAAU,CACR6E,WACA/D,cACAgE,eAEF9D,MAAOf,GACPgB,QAAS,CACPC,QAAQ,EACRC,QAAQ,GAEVC,aAAc,CACZC,OAAQ,CACNC,QAAS,IAEXC,KAAM,CACJC,QAAS,CACPC,WAAY,yHAEdC,cAAe,yDAOduE,GAAuB,WAClC,IAAMjS,EAAUnB,KACVoB,EAAQzB,KAER0T,EAAmBhS,eAAkB,SAACmO,GAC1C,gDAAO,WAAOxE,GAAP,UAAA0E,EAAA,6DACLtO,EAAMyR,cAAcrD,EAAcxE,EAAK9O,MADlC,kBAEE2T,QAAQC,WAFV,2CAAP,wDAIC,CAAC1O,IAEEmO,EAAsBlO,eAAkB,SAACmO,GAC7C,gDAAO,WAAOxE,EAAWyE,GAAlB,UAAAC,EAAA,6DACLtO,EAAM4R,iBAAiBxD,EAAcxE,EAAKrM,GAAIqM,EAAK9O,MAD9C,kBAEE2T,QAAQC,WAFV,2CAAP,0DAIC,CAAC1O,IAEEkS,EAAsBjS,eAAkB,SAACmO,GAC7C,gDAAO,WAAOxE,GAAP,gBAAA0E,EAAA,6DACG/Q,EAAOqM,EAAPrM,GACRyC,EAAM6R,iBAAiBzD,EAAc7Q,GAFhC,kBAGEkR,QAAQC,WAHV,2CAAP,wDAKC,CAAC1O,IAEJ,OACE,uBAAKY,UAAWb,EAAQhB,OACtB,gBAACqK,GAAA,EAAD,CAAMjG,WAAS,EAAClE,QAAS,EAAG2B,UAAWb,EAAQ6L,cAC5CmG,GACC/R,EAAM3E,SACN,WACA4W,EAAiB,YACjB9D,EAAoB,YACpB+D,EAAoB,aAErBH,GACC/R,EAAM5E,OACN,SACA6W,EAAiB,UACjB9D,EAAoB,UACpB+D,EAAoB,cC7FjB3T,GAAW,WACtB,IAAMC,EAAWC,cAiCjB,MAAO,CACL+E,SAjCWwG,aAAkC,SAAAjO,GAAK,OAAIA,EAAMK,QAiC7CtB,KACfqX,cAhCoB,WACpB3T,EzCDK,CACLxC,KAAMvB,EAAY0B,iB0CnBTyC,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CsT,KAAM,CACJlT,QAAS,QAEX4D,aAAchE,EAAM8D,OAAOC,QAC3BE,QAAS,CACPC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAYtE,EAAMG,QAAQ,GAC1BoE,cAAevE,EAAMG,QAAQ,QCJpBoT,GAAiB,WAC5B,IAAMtS,EAAUnB,KACVoB,EAAQzB,KAFoB,EAIE0B,YAAe,GAJjB,mBAI3B6D,EAJ2B,KAIfwO,EAJe,KAM5BC,EAAqBtS,eAAkB,WAC3CsO,QAAQC,IAAI1K,GAAaA,GACzBwO,GAAexO,KACd,CAACA,EAAYwO,IAEVE,EAAevS,eAAkB,WACrCD,EAAMmS,kBACL,CAACnS,IAEJ,OACE,uBAAKY,UAAWb,EAAQqS,MACtB,gBAACzR,EAAA,EAAD,MACA,gBAAC,GAAD,CACEmD,WAAYA,EACZC,oBAAqBwO,EACrBpM,SAAUqM,IAEZ,gBAAC,GAAD,CACE1O,WAAYA,EACZN,SAAUxD,EAAMwD,SAChBO,oBAAqBwO,IAEvB,wBAAM3R,UAAWb,EAAQgD,SACvB,uBAAKnC,UAAWb,EAAQ+C,eACxB,gBAAC,GAAD,MACA,gBAACtC,EAAA,EAAD,CAAWE,SAAS,KAAKE,UAAWb,EAAQoD,WAC1C,gBAAC,IAAD,CAAOoB,KAAK,cACV,gBAAC,GAAD,OAEF,gBAAC,IAAD,CAAOA,KAAK,aACV,gBAAC,GAAD,OAEF,gBAAC,IAAD,CAAOA,KAAK,eACV,gBAAC,GAAD,W,UC1CCkO,GAAU,WAGrB,QAFkBzI,aAAkC,SAAAjO,GAAK,OAAIA,EAAMF,QAA3DjB,OCAG8X,GAA8B,SAAC,GAGrC,IAFLC,EAEI,EAFJA,SACGC,EACC,6BACEC,EAAeJ,KAErB,OACE,gBAAC,IAAD,iBACMG,EADN,CAEEE,OAAQ,gBAAGnK,EAAH,EAAGA,SAAH,OACNkK,EACEF,EAEE,gBAAC,IAAD,CACEI,GAAI,CACF1M,SAAU,SACVtK,MAAO,CAAEgC,KAAM4K,WChBlBqK,GAA4B,SAAC,GAGnC,IAFLL,EAEI,EAFJA,SACGC,EACC,6BACEC,EAAeJ,KAErB,OACE,gBAAC,IAAD,iBACMG,EADN,CAEEE,OAAQ,gBAAGnK,EAAH,EAAGA,SAAH,OACLkK,EAGG,gBAAC,IAAD,CACEE,GAAI,CACF1M,SAAU,IACVtK,MAAO,CAAEgC,KAAM4K,MALrBgK,OCRJ7T,GAAQmU,YAAe,CAC3BzT,QAAS,CACP8F,QAAS,CACP5F,KAAM,WAERD,UAAW,CACTC,KAAM,cAKNwT,GAAqB,WACzB,OACE,gBAAC,IAAD,KACE,gBAAC,GAAD,CAAY3O,KAAK,UACf,gBAAC,EAAD,OAEF,gBAAC,GAAD,CAAcA,KAAK,KACjB,gBAAC,GAAD,SAMK4O,GAAgB,WAC3B,OACE,gBAAC,IAAD,CAAUjV,MAAOA,GACf,gBAAC,IAAD,CAAaG,UAAWA,GACtB,gBAAC+U,EAAA,EAAD,CAAetU,MAAOA,IACpB,gBAAC,IAAD,CAAQuU,SAAS,iBACf,gBAAC,GAAD,WC7BQC,QACW,cAA7BC,OAAO5K,SAAS6K,UAEe,UAA7BD,OAAO5K,SAAS6K,UAEhBD,OAAO5K,SAAS6K,SAASC,MACvB,2DCZNC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9F,QAAQ8F,MAAMA,EAAMC,c","file":"static/js/main.de16331d.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport enum AuthActions {\n  SetToken = 'Auth/SetToken',\n  RemoveToken = 'Auth/RemoveToken',\n}\n\nexport type AuthActionScheme = Action<AuthActions> & {\n  type: AuthActions;\n  payload?: string;\n}\n\nexport const setToken = (token: string): AuthActionScheme => {\n  return {\n    type: AuthActions.SetToken,\n    payload: token,\n  };\n};\n\nexport const removeToken = (): AuthActionScheme => {\n  return {\n    type: AuthActions.RemoveToken,\n  };\n};","import { Action } from 'redux';\n\nexport enum UserActions {\n  SetName = 'User/SetName',\n  SetMonth = 'User/SetMonth',\n}\n\nexport type UserActionScheme = Action<UserActions> & {\n  type: UserActions;\n  payload: string | number;\n}\n\nexport const setName = (name: string): UserActionScheme => {\n  return {\n    type: UserActions.SetName,\n    payload: name,\n  };\n};\n\nexport const setMonth = (month: number): UserActionScheme => {\n  return {\n    type: UserActions.SetMonth,\n    payload: month,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { AuthState } from './auth.types';\nimport { AuthActionScheme, AuthActions } from './actions';\n\ntype AuthReducer = Reducer<AuthState, AuthActionScheme>;\n\nconst initState: AuthState = {\n  token: '',\n};\n\nexport const authReducer: AuthReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case AuthActions.SetToken:\n      return {\n        ...state,\n        token: payload as string,\n      }\n    case AuthActions.RemoveToken:\n      return {\n        ...state,\n        token: null,\n      }\n    default:\n      return state;\n  }\n};\n","import { Action } from 'redux';\n\nimport { StatementRecord } from './statement.types';\n\nexport enum StatementActions {\n  SetStatement = 'Statement/SetStatement',\n}\n\nexport type StatementActionScheme = Action<StatementActions> & {\n  type: StatementActions;\n  payload: Array<StatementRecord>;\n}\n\nexport const setStatement = (items: Array<StatementRecord>): StatementActionScheme => {\n  return {\n    type: StatementActions.SetStatement,\n    payload: items,\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { UserState } from './user.types';\nimport { UserActionScheme, UserActions } from './actions';\n\ntype UserReducer = Reducer<UserState, UserActionScheme>;\n\nconst initState: UserState = {\n  name: '',\n  month: 0,\n};\n\nexport const userReducer: UserReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case UserActions.SetName:\n      return {\n        ...state,\n        name: payload as string,\n      }\n    case UserActions.SetMonth:\n      return {\n        ...state,\n        month: payload as number,\n      }\n    default:\n      return state;\n  }\n};","import { Action } from 'redux';\n\nexport enum PlanningActions {\n  CreateYear = 'Planning/CreateYear',\n  RemoveYear = 'Planning/RemoveYear',\n  CreateMonth = 'Planning/CreateMonth',\n  RemoveMonth = 'Planning/RemoveMonth',\n}\n\nexport type PlanningActionScheme = Action<PlanningActions> & {\n  type: PlanningActions;\n  payload: number | { year: number, month: number };\n}\n\nexport const createYear = (year: number): PlanningActionScheme => {\n  return {\n    type: PlanningActions.CreateYear,\n    payload: year,\n  };\n};\n\nexport const removeYear = (year: number): PlanningActionScheme => {\n  return {\n    type: PlanningActions.RemoveYear,\n    payload: year,\n  };\n};\n\nexport const createMonth = (year: number, month: number): PlanningActionScheme => {\n  return {\n    type: PlanningActions.CreateMonth,\n    payload: {\n      year,\n      month,\n    },\n  };\n};\n\nexport const removeMonth = (year: number, month: number): PlanningActionScheme => {\n  return {\n    type: PlanningActions.RemoveMonth,\n    payload: {\n      year,\n      month,\n    },\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { StatementState, StatementRecord } from './statement.types';\nimport { StatementActionScheme, StatementActions } from './actions';\n\ntype StatementReducer = Reducer<StatementState, StatementActionScheme>;\n\nconst initState: StatementState = {\n  items: [],\n};\n\nexport const statementReducer: StatementReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case StatementActions.SetStatement:\n      return {\n        ...state,\n        items: payload as Array<StatementRecord>,\n      }\n    default:\n      return state;\n  }\n};","import { Action } from 'redux';\n\nimport { Category, CategoryType } from './categories.types';\n\nexport enum CategoryActions {\n  AddCategory = 'Categories/AddCategory',\n  UpdateCategory = 'Categories/UpdateCategory',\n  DeleteCategory = 'Categories/DeleteCategory',\n}\n\nexport type CategoryActionScheme = Action<CategoryActions> & {\n  type: CategoryActions;\n  payload: Category | { type: string, id: string };\n}\n\nexport const addCategory = (category: Category): CategoryActionScheme => {\n  return {\n    type: CategoryActions.AddCategory,\n    payload: category,\n  };\n};\n\nexport const updateCategory = (category: Category): CategoryActionScheme => {\n  return {\n    type: CategoryActions.UpdateCategory,\n    payload: category,\n  };\n};\n\nexport const deleteCategory = (type: CategoryType, id: string): CategoryActionScheme => {\n  return {\n    type: CategoryActions.DeleteCategory,\n    payload: {\n      type,\n      id,\n    },\n  };\n};\n","import { Reducer } from 'redux';\n\nimport { PlanningState, PlanningYear, PlanningMonth } from './planning.types';\nimport { PlanningActionScheme, PlanningActions } from './actions';\n\ntype PlanningReducer = Reducer<PlanningState, PlanningActionScheme>;\n\nconst initState: PlanningState = {\n  plans: {}\n};\n\nexport const planningReducer: PlanningReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case PlanningActions.CreateYear: {\n      const year = payload as number\n\n      if (state.plans[year]) {\n        return state;\n      }\n\n      const newYear: PlanningYear = {\n        year,\n        months: {}\n      };\n\n      return {\n        ...state,\n        plans: {\n          ...state.plans,\n          [year]: newYear,\n        }\n      }\n    }\n    case PlanningActions.RemoveYear: {\n      const year = payload as number;\n\n      if (!state.plans[year]) {\n        return state;\n      }\n\n      const plans = state.plans;\n      delete plans[year];\n\n      return {\n        ...state,\n        plans,\n      }\n    }\n    case PlanningActions.CreateMonth: {\n      const { year, month } = payload as { year: number, month: number };\n\n      if (!state.plans[year]) {\n        return state;\n      }\n      if (month < 0 || month > 11) {\n        return state;\n      }\n\n      const newMonth: PlanningMonth = {\n        month,\n        income: [],\n        expenses: [],\n      };\n\n      return {\n        ...state,\n        plans: {\n          ...state.plans,\n          [year]: {\n            year,\n            months: {\n              ...state.plans[year].months,\n              [month]: newMonth,\n            }\n          }\n        }\n      }\n    }\n    case PlanningActions.RemoveMonth: {\n      const { year, month } = payload as { year: number, month: number };\n\n      if (!state.plans[year]) {\n        return state;\n      }\n      if (month < 0 || month > 11) {\n        return state;\n      }\n\n      const months = state.plans[year].months;\n      delete months[month];\n\n      return {\n        ...state,\n        plans: {\n          ...state.plans,\n          [year]: {\n            year,\n            months,\n          }\n        }\n      }\n    }\n    default:\n      return state;\n  }\n};","import { Reducer } from 'redux';\n\nimport { CategoriesState, Category, CategoryType } from './categories.types';\nimport { CategoryActionScheme, CategoryActions } from './actions';\n\ntype StatementReducer = Reducer<CategoriesState, CategoryActionScheme>;\n\nconst initState: CategoriesState = {\n  income: [],\n  expenses: [],\n};\n\nexport const categoriesReducer: StatementReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case CategoryActions.AddCategory: {\n      const category = payload as Category;\n      const items = state[category.type].filter(cat => cat.id !== category.id);\n\n      const categoriesWithSameName = state[category.type].filter(cat => cat.name === category.name);\n      if (categoriesWithSameName.length > 0) {\n        return state;\n      }\n\n      items.push(category);\n\n      return {\n        ...state,\n        [category.type]: items,\n      }\n    }\n    case CategoryActions.UpdateCategory: {\n      const category = payload as Category;\n      const targetIndex = state[category.type].findIndex(cat => cat.id === category.id);\n\n      if (targetIndex < 0) {\n        return state;\n      }\n\n      const categoriesWithSameName = state[category.type].filter(cat => cat.name === category.name);\n      if (categoriesWithSameName.length > 0) {\n        return state;\n      }\n\n      const items = Array.from(state[category.type]);\n      items[targetIndex] = { ...category };\n      return {\n        ...state,\n        [category.type]: items,\n      }\n    }\n    case CategoryActions.DeleteCategory: {\n      const { id, type } = payload as { id: string, type: CategoryType };\n      const targetIndex = state[type].findIndex(cat => cat.id === id);\n\n      if (targetIndex < 0) {\n        return state;\n      }\n\n      const items = Array.from(state[type]);\n      items.splice(targetIndex, 1);\n      return {\n        ...state,\n        [type]: items,\n      }\n    }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\n\nimport { RootState } from './store.types';\n\nimport { authReducer } from './auth/reducer';\nimport { userReducer } from './user/reducer';\nimport { statementReducer } from './statement/reducer';\nimport { planningReducer } from './planning/reducer';\nimport { categoriesReducer } from './categories/reducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage: storage,\n};\n\nconst planningPersistConfig = {\n  key: 'planning',\n  storage: storage,\n};\n\nconst categoriesPersistConfig = {\n  key: 'categories',\n  storage: storage,\n};\n\nexport const reducer = combineReducers<RootState>({\n  auth: persistReducer(authPersistConfig, authReducer) as any,\n  user: userReducer,\n  statement: statementReducer,\n  planning: persistReducer(planningPersistConfig, planningReducer) as any,\n  categories: persistReducer(categoriesPersistConfig, categoriesReducer) as any,\n});","import { createStore } from 'redux';\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { reducer } from './reducer';\n\nexport const store = createStore(\n  reducer,\n  {},\n  composeWithDevTools(),\n);\n\nexport const persistor = persistStore(store);\n","import { useDispatch } from 'react-redux';\n\nimport { setToken } from '../../store/auth/actions';\n\ntype Hook = {\n  onSetToken: (token: string) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n\n  const onSetToken = (token: string) => {\n    if (token && token.length > 0) {\n      dispatch(setToken(token));\n    }\n  }\n\n  return {\n    onSetToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Login: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [token, setToken] = React.useState<string>('');\n\n  const handleTokenChange = React.useCallback((event: any) => {\n    setToken(event.target.value);\n  }, [setToken]);\n\n  const handleLoginClick = React.useCallback((event: any) => {\n    event.preventDefault();\n    Store.onSetToken(token);\n  }, [Store, token]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Mono токен\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"token\"\n            label=\"Token\"\n            type=\"password\"\n            id=\"token\"\n            autoComplete=\"none\"\n            value={token}\n            onChange={handleTokenChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleLoginClick}\n          >\n            Авторизуватися\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: DRAWER_WIDTH,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n\n\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  userContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  userName: {\n    display: 'visible',\n  },\n  userNameHidden: {\n    display: 'none',\n  },\n  dateContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  date: {\n    display: 'visible',\n  },\n  dateHidden: {\n    display: 'none',\n  }\n}));","import * as React from 'react';\nimport * as Router from 'react-router-dom';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { useStyles } from './styles';\n\nconst getUserAvatarSymbols = (name: string): string => {\n  const n = name.split(' ');\n  return n.reduce((acc, value) => acc += value.substring(0, 1).toUpperCase(), '');\n}\n\nconst renderItems = (getNavigateClickHandler: (path: string) => () => void): JSX.Element => (\n  <>\n    <ListItem button onClick={getNavigateClickHandler('/planning')}>\n      <ListItemIcon>\n        <DateRangeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Планування\" />\n    </ListItem>\n    <ListItem button onClick={getNavigateClickHandler('/categories')}>\n      <ListItemIcon>\n        <CategoryIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Категорії доходів і витрат\" />\n    </ListItem>\n    <ListItem button onClick={getNavigateClickHandler('/dashboard')}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Дашборд\" />\n    </ListItem>\n  </>\n);\n\ninterface Props {\n  drawerOpen: boolean;\n  userName: string;\n  onDrawerToggleClick: () => void;\n}\n\nexport const SideMenu: React.FC<Props> = ({\n  drawerOpen,\n  userName,\n  onDrawerToggleClick,\n}) => {\n  const classes = useStyles();\n  const history = Router.useHistory();\n\n  const drawerClasses = {\n    paper: clsx(classes.drawerPaper, !drawerOpen && classes.drawerPaperClose),\n  };\n  const userNameClasses = clsx(classes.userName, !drawerOpen && classes.userNameHidden);\n  const dateClasses = clsx(classes.date, !drawerOpen && classes.dateHidden);\n\n  const getNavigateClickHandler = React.useCallback((path: string) => () => {\n    history.push(path);\n  }, [history]);\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={drawerClasses}\n      open={drawerOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={onDrawerToggleClick}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.userContainer}>\n        <Avatar>{getUserAvatarSymbols(userName)}</Avatar>\n        <div className={userNameClasses}>\n          <Typography variant=\"h6\">{userName}</Typography>\n        </div>\n      </div>\n      <Divider />\n      <div className={classes.dateContainer}>\n        <div className={dateClasses}>\n          <Typography variant=\"body2\">Липень 2020</Typography>\n        </div>\n      </div>\n      <Divider />\n      <List>\n        {renderItems(getNavigateClickHandler)}\n      </List>\n    </Drawer>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst DRAWER_WIDTH = 300;\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: DRAWER_WIDTH,\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n}));\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { useLocation } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { useStyles } from './styles';\n\ninterface Props {\n  drawerOpen: boolean;\n  onDrawerToggleClick: () => void;\n  onLogout: () => void;\n}\n\nconst getPageTitle = (pathname: string): string => {\n  switch (pathname) {\n    case '/planning':\n      return 'Планування';\n    case '/dashboard':\n      return 'Дашборд';\n    case '/categories':\n      return 'Категорії доходів і витрат';\n    default:\n      return '';\n  }\n}\n\nexport const Header: React.FC<Props> = ({\n  drawerOpen,\n  onDrawerToggleClick,\n  onLogout,\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const pageTitle = getPageTitle(location.pathname);\n\n  const appClasses = clsx(classes.appBar, drawerOpen && classes.appBarShift);\n  const drawIconClasses = clsx(classes.menuButton, drawerOpen && classes.menuButtonHidden);\n\n  return (\n    <AppBar position=\"absolute\" className={appClasses}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={onDrawerToggleClick}\n          className={drawIconClasses}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          {pageTitle}\n        </Typography>\n        <IconButton color=\"inherit\" onClick={onLogout}>\n          <ExitToAppIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  modal: {\n    maxWidth: 500,\n    width: '100%',\n    height: 500,\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-150px, -250px)',\n    outline: 'none',\n  },\n  modalInner: {\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    height: '100%',\n  },\n  button: {\n    marginLeft: 10,\n    marginRight: 10,\n  }\n}));\n","const MONTHS = {\n  '0': 'Січень',\n  '1': 'Лютий',\n  '2': 'Березень',\n  '3': 'Квітень',\n  '4': 'Травень',\n  '5': 'Червень',\n  '6': 'Липень',\n  '7': 'Серпень',\n  '8': 'Вересень',\n  '9': 'Жовтень',\n  '10': 'Листопад',\n  '11': 'Грудень',\n};\n\n\nexport const getMonthNameByIndex = (month: string): string => {\n  return MONTHS[month] || 'Invalid month';\n}","import { makeStyles } from '@material-ui/core/styles';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    paddingLeft: 24,\n    paddingRight: 24,\n    marginTop: 10,\n  }\n}));\n","import * as React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport BreadcrumbsUI from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getMonthNameByIndex } from '../../../../utils';\n\nimport { useStyles } from './styles';\n\nconst renderLink = (path: string, label: string, onClick: () => void, last = false) => {\n  let finalLabel = label;\n\n  if (label.startsWith('year-')) {\n    finalLabel = label.substring(5, label.length);\n  } else if (label.startsWith('month-')) {\n    const month = label.substring(6, label.length);\n    finalLabel = getMonthNameByIndex(month);\n  }\n\n  if (last) {\n    return (\n      <Typography\n        key={finalLabel}\n        color=\"textPrimary\"\n      >\n        {finalLabel}\n      </Typography>\n    );\n  }\n  return (\n    <Link\n      key={path}\n      color=\"inherit\"\n      href={path}\n      onClick={onClick}\n    >\n      {finalLabel}\n    </Link>\n  );\n}\n\nconst renderBreadcrumbs = (chunks: string[], getClickHandler: (path: string) => () => void) => {\n  return chunks.map((chunk, index) => {\n    const fullPath = chunks\n      .slice(0, index + 1)\n      .reduce((acc, value, sliceIndex) => {\n        return acc += `${value}${sliceIndex < index ? '/' : ''}`;\n      }, '');\n    const handler = getClickHandler(fullPath);\n    const isLast = index === chunks.length - 1;\n\n    return renderLink(fullPath, chunk, handler, isLast);\n  });\n}\n\nexport const Breadcrumbs: React.FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const chunks = location.pathname.split('/');\n\n  const getBreadcrumbClickHandler = React.useCallback((path: string) => () => {\n    history.push(path);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <BreadcrumbsUI aria-label=\"breadcrumb\">\n        {renderBreadcrumbs(chunks, getBreadcrumbClickHandler)}\n      </BreadcrumbsUI>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n  },\n}));\n","import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  BarSeries,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { EventTracker, HoverState } from '@devexpress/dx-react-chart';\n\nimport { useStyles } from './styles';\n\ntype ChartTab =\n  | 'income'\n  | 'expenses';\n\ntype ChartItem = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ninterface Props {\n  chartData: Array<ChartItem>;\n}\n\nexport const MoneyChart: React.FC<Props> = ({\n  chartData,\n}) => {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState<ChartTab>('income');\n\n  const handleChangeActiveTab = React.useCallback((event: any, tab: ChartTab) => {\n    setActiveTab(tab);\n  }, [setActiveTab]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Tabs\n            value={activeTab}\n            onChange={handleChangeActiveTab}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Доходи\" value=\"income\" />\n            <Tab label=\"Витрати\" value=\"expenses\" />\n          </Tabs>\n          {activeTab === 'income' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"plus\"\n                valueField=\"plus\"\n                argumentField=\"day\"\n                color=\"#00b300\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n          {activeTab === 'expenses' && (\n            <Chart\n              data={chartData}\n            >\n              <ArgumentAxis />\n              <ValueAxis />\n              <BarSeries\n                name=\"minus\"\n                valueField=\"minus\"\n                argumentField=\"day\"\n                color=\"#ff4d4d\"\n              />\n              <EventTracker />\n              <HoverState />\n            </Chart>\n          )}\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper>\n          TODO: statistic for day\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n","import * as React from 'react';\n\nimport { MoneyChart } from './components';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const Dashboard: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  return (\n    <div className={classes.paper}>\n      <MoneyChart\n        chartData={Store.statementGroupedByDay}\n      />\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { UserState } from '../../../../store/user/user.types';\nimport { StatementState } from '../../../../store/statement/statement.types';\n\ntype StatementGroupedByDay = {\n  day: string;\n  minus: number;\n  plus: number;\n}\n\ntype Hook = {\n  statementGroupedByDay: Array<StatementGroupedByDay>;\n}\n\nexport const useStore = (): Hook => {\n  const statement = useSelector<RootState, StatementState>(state => state.statement);\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const dates = new Map<string, StatementGroupedByDay>();\n\n  const maxDays = new Date(2020, user.month, 0).getDate();\n  for (let i = 0; i < maxDays; i += 1) {\n    const day = `${i}`;\n    dates.set(day, {\n      day,\n      minus: 0,\n      plus: 0,\n    })\n  }\n\n  statement.items.forEach(({ time, amount, balance }) => {\n    const m = amount / 100;\n    const entry: StatementGroupedByDay = {\n      day: `${new Date(time * 1000).getDate()}`,\n      minus: m < 0 ? m : 0,\n      plus: m > 0 ? m : 0,\n    };\n    const item = dates.get(entry.day);\n    entry.minus += item ? item.minus : 0;\n    entry.plus += item ? item.plus : 0;\n    dates.set(entry.day, entry);\n  });\n\n  const statementGroupedByDay: Array<StatementGroupedByDay> = [];\n  dates.forEach((value) => {\n    statementGroupedByDay.push({\n      ...value,\n      minus: value.minus * -1,\n    });\n  });\n\n  return {\n    statementGroupedByDay,\n  }\n}","import * as React from 'react';\n\ninterface Props {\n  color: string;\n  progress: number;\n}\n\nexport const ProgressBar: React.FC<Props> = ({\n  color,\n  progress,\n}) => {\n  const containerStyles = {\n    height: 16,\n    backgroundColor: \"#e0e0de\",\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${progress}%`,\n    backgroundColor: color,\n    borderRadius: 'inherit',\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles} />\n    </div>\n  );\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    marginBottom: 16,\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  tableWrapper: {\n    marginTop: 24,\n  }\n}));\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport MaterialTable from 'material-table';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport Edit from '@material-ui/icons/EditOutlined';\n\nimport { CategoryType } from '../../../../../../store/categories/categories.types';\nimport { CategoryPrognosis } from '../../../../../../store/planning/planning.types';\nimport { getMonthNameByIndex } from '../../../../../../utils';\n\nimport { ProgressBar } from './components';\nimport { useStore, Balance } from './useStore';\nimport { useStyles } from './styles';\n\ntype RouteParams = {\n  year?: string;\n  month?: string;\n}\n\nconst CATEGORIES_COLUMNS = [\n  { title: 'category', field: 'name', editable: 'never' },\n  { title: 'prognosis', field: 'prognosis' },\n  { title: 'actual', field: 'actual' },\n  { title: 'difference', field: 'difference', editable: 'never' },\n];\n\nconst tableIcons = {\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nconst renderBalanceTable = (\n  title: string,\n  balance: Balance,\n  classes: any,\n  color: string,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <Typography component=\"h2\" variant=\"h5\">\n        {title}\n      </Typography>\n      <Card className={classes.card}>\n        <div className={classes.cardDetails}>\n          <CardContent>\n            <Grid container>\n              <Grid item xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">Prognosis</Typography>\n              </Grid>\n              <Grid item xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">\n                  {balance.prognosis}\n                </Typography>\n              </Grid>\n              <Grid item xs={6} md={6}>\n                <ProgressBar color={color} progress={0} />\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">Actual</Typography>\n              </Grid>\n              <Grid item xs={3} md={3}>\n                <Typography component=\"div\" variant=\"body1\">\n                  {balance.actual}\n                </Typography>\n              </Grid>\n              <Grid item xs={6} md={6}>\n                <ProgressBar color={color} progress={59} />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </div>\n      </Card>\n    </Grid>\n  );\n\nconst renderCategoriesTable2 = (\n  categories: Array<CategoryPrognosis>,\n  title: string,\n  onRowUpdate: (newData: any, oldData: any) => Promise<void>,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <MaterialTable\n        title={title}\n        columns={CATEGORIES_COLUMNS as any}\n        data={categories}\n        editable={{\n          onRowUpdate,\n        }}\n        icons={tableIcons as any}\n        options={{\n          paging: false,\n          search: false,\n        }}\n        localization={{\n          header: {\n            actions: '',\n          },\n          body: {\n            editRow: {\n              deleteText: 'Видалити цю категорію?',\n            },\n            deleteTooltip: 'Видалити'\n          }\n        }}\n      />\n    </Grid>\n  );\n\nexport const Month: React.FC = () => {\n  const classes = useStyles();\n  const params = useParams<RouteParams>();\n  const Store = useStore(params.year, params.month);\n\n  const getRowUpdateHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any, oldData: any): Promise<void> => {\n      console.log(data);\n      // Store.onUpdateCategory(categoryType, data.id, data.name)\n      return Promise.resolve();\n    }\n  }, []);\n\n  return (\n    <div className={classes.paper}>\n      <>\n        {params.month && params.year && (\n          <div className={classes.titleContainer}>\n            <Typography component=\"h1\" variant=\"h4\">\n              {`${getMonthNameByIndex(params.month)} ${params.year}`}\n            </Typography>\n          </div>\n        )}\n        <Grid container spacing={4}>\n          {renderBalanceTable(\n            'Expenses',\n            Store.expenses.balance,\n            classes,\n            '#9E3D3D',\n          )}\n          {renderBalanceTable(\n            'Income',\n            Store.income.balance,\n            classes,\n            '#539E3D',\n          )}\n        </Grid>\n\n        <Grid container spacing={4} className={classes.tableWrapper}>\n          {renderCategoriesTable2(\n            Store.expenses.categories,\n            'Expenses',\n            getRowUpdateHandler('expenses'),\n          )}\n          {renderCategoriesTable2(\n            Store.income.categories,\n            'Income',\n            getRowUpdateHandler('income'),\n          )}\n        </Grid>\n      </>\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../../../../../../store/store.types';\nimport { PlanningState, PlanningMonth, CategoryPrognosis } from '../../../../../../store/planning/planning.types';\n\nexport type Balance = {\n  prognosis: number;\n  actual: number;\n}\n\ntype Hook = {\n  income: {\n    balance: Balance;\n    categories: Array<CategoryPrognosis>;\n  }\n  expenses: {\n    balance: Balance;\n    categories: Array<CategoryPrognosis>;\n  }\n}\n\nexport const useStore = (year: string | undefined, month: string | undefined): Hook => {\n  const yearKey = year ? parseInt(year) : NaN;\n  const monthKey = month ? parseInt(month) : NaN;\n\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n  // const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n  // const { income, expenses } = categories;\n\n  let monthPlan: PlanningMonth = {\n    month: monthKey,\n    income: [],\n    expenses: [],\n  };\n\n  const plan = planning.plans[yearKey]\n  if (plan) {\n    monthPlan = plan.months[monthKey];\n  }\n\n  const { income, expenses } = monthPlan;\n\n  // const incomePrognosis = income.map((category) => {\n  //   const prognosis = 100;\n  //   const actual = 50;\n  //   const difference = prognosis - actual;\n\n  //   return {\n  //     id: category.id,\n  //     name: category.name,\n  //     prognosis,\n  //     actual,\n  //     difference,\n  //   }\n  // });\n\n  // const expensesPrognosis = income.map((category) => {\n  //   const prognosis = 100;\n  //   const actual = 50;\n  //   const difference = prognosis - actual;\n\n  //   return {\n  //     id: category.id,\n  //     name: category.name,\n  //     prognosis,\n  //     actual,\n  //     difference,\n  //   }\n  // });\n\n  const incomeBalance = {\n    prognosis: income.reduce((acc, category) => {\n      return acc += category.prognosis;\n    }, 0),\n    actual: income.reduce((acc, category) => {\n      return acc += category.actual;\n    }, 0),\n  }\n\n  const expensesBalance = {\n    prognosis: expenses.reduce((acc, category) => {\n      return acc += category.prognosis;\n    }, 0),\n    actual: expenses.reduce((acc, category) => {\n      return acc += category.actual;\n    }, 0),\n  }\n\n  return {\n    income: {\n      balance: incomeBalance,\n      categories: income\n    },\n    expenses: {\n      balance: expensesBalance,\n      categories: expenses\n    }\n  }\n}","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash.isempty';\n\nimport * as PlanningActions from '../../../../../../store/planning/actions';\nimport { RootState } from '../../../../../../store/store.types';\nimport { PlanningState, PlanningMonth } from '../../../../../../store/planning/planning.types';\n\ntype Hook = {\n  year?: number;\n  months: Record<number, PlanningMonth>;\n  empty: boolean;\n  invalid: boolean;\n  handleCreateMonth: (year: number, month: number) => void;\n  handleRemoveMonth: (year: number, month: number) => void;\n}\n\nexport const useStore = (year: string | undefined): Hook => {\n  const dispatch = useDispatch();\n\n  const yearKey = year ? parseInt(year) : NaN;\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n  const planningYear = planning.plans[yearKey];\n\n  const handleCreateMonth = React.useCallback((year: number, month: number) => {\n    dispatch(PlanningActions.createMonth(year, month));\n  }, [dispatch]);\n\n  const handleRemoveMonth = React.useCallback((year: number, month: number) => {\n    dispatch(PlanningActions.removeMonth(year, month));\n  }, [dispatch]);\n\n  if (!planningYear) {\n    return {\n      empty: true,\n      invalid: true,\n      months: {},\n      handleCreateMonth,\n      handleRemoveMonth,\n    }\n  }\n\n  return {\n    year: yearKey,\n    months: planningYear.months,\n    empty: isEmpty(planningYear.months),\n    invalid: false,\n    handleCreateMonth,\n    handleRemoveMonth,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  selectMonth: {\n    width: '100%',\n  },\n  monthCell: {\n    height: '100%',\n    width: '100%',\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  },\n  buttonCell: {\n    paddingRight: 16,\n    paddingLeft: 16,\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  }\n}));\n","import * as React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport MaterialTable, { MTableEditField, MTableCell } from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/EditOutlined';\nimport Search from '@material-ui/icons/Search';\n\nimport { PlanningMonth } from '../../../../../../store/planning/planning.types';\nimport { getMonthNameByIndex } from '../../../../../../utils';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\ntype RouteParams = {\n  year?: string;\n}\n\nconst CATEGORIES_COLUMNS = [\n  { title: 'month', field: 'month' },\n  { title: 'balance', field: 'balance' },\n];\n\nconst tableIcons = {\n  Add: React.forwardRef((props: any, ref) => <AddBox {...props} ref={ref} />),\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Delete: React.forwardRef((props: any, ref) => <DeleteOutline {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  ResetSearch: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Search: React.forwardRef((props: any, ref) => <Search {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nconst getRenderEditField = (\n  classes: any,\n  months?: Record<number, PlanningMonth>\n) => (props: any): JSX.Element => {\n  if (props.columnDef.field !== 'month') {\n    return (\n      <MTableEditField {...props} />\n    );\n  }\n\n  return (\n    <Select\n      className={classes.selectMonth}\n      labelId=\"select-month\"\n      id=\"select-month\"\n      value={props.value}\n      displayEmpty\n      onChange={(e) => props.onChange(e.target.value)}\n    >\n      <MenuItem disabled>Select month</MenuItem>\n      {new Array(12).fill(0).map((_, i) => {\n        const disabled = months\n          ? !!months[i]\n          : false;\n\n        return (\n          <MenuItem\n            key={`select-month-${i}`}\n            value={i}\n            disabled={disabled}\n          >\n            {getMonthNameByIndex(`${i}`)}\n          </MenuItem>\n        )\n      })}\n    </Select>\n  );\n}\n\nconst getRenderCell = (classes: any, getMonthOpenHandler: (month: number) => any) => (props: any): JSX.Element => {\n  if (props.columnDef.field === 'month') {\n    return (\n      <td className={classes.monthCell}>\n        {getMonthNameByIndex(props.value)}\n      </td>\n    );\n  }\n  if (props.columnDef.tableData.columnOrder === CATEGORIES_COLUMNS.length - 1) {\n    return (\n      <>\n        <MTableCell {...props} />\n        <td className={classes.buttonCell}>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={getMonthOpenHandler(props.rowData.month)}\n          >\n            Open\n          </Button>\n        </td>\n      </>\n    );\n  }\n\n  return (\n    <MTableCell {...props} />\n  );\n}\n\nexport const Year: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const params = useParams<RouteParams>();\n  const Store = useStore(params.year);\n\n  const getMonthOpenHandler = React.useCallback((month: number) => () => {\n    history.push(`/planning/year-${params.year}/month-${month}`);\n  }, [history, params.year]);\n\n  const handleAddMonth = React.useCallback(async (data: any): Promise<void> => {\n    const year = params.year ? parseInt(params.year) : NaN;\n    const { month } = data;\n    Store.handleCreateMonth(year, month);\n    return Promise.resolve();\n  }, [Store, params.year]);\n\n  const handleRemoveMonth = React.useCallback(async (data: any): Promise<void> => {\n    const year = params.year ? parseInt(params.year) : NaN;\n    const { month } = data;\n    Store.handleRemoveMonth(year, month);\n    return Promise.resolve();\n  }, [Store, params.year]);\n\n  return (\n    <div className={classes.paper}>\n      <Grid container>\n        {Store.invalid && (\n          <Typography variant=\"body1\" component=\"div\">Invalid year</Typography>\n        )}\n        {Store.empty && (\n          <div>\n            <Typography variant=\"body1\" component=\"div\">You don't have planning months</Typography>\n          </div>\n        )}\n        {!Store.invalid && (\n          <Grid item xs={12} md={12}>\n            <MaterialTable\n              title={`Planning ${params.year} year`}\n              columns={CATEGORIES_COLUMNS as any}\n              data={Object.values(Store.months)}\n              icons={tableIcons as any}\n              editable={{\n                onRowAdd: handleAddMonth,\n                onRowDelete: handleRemoveMonth,\n              }}\n              options={{\n                paging: false,\n                search: false,\n              }}\n              components={{\n                EditField: getRenderEditField(classes, Store.months),\n                Cell: getRenderCell(classes, getMonthOpenHandler),\n                Header: () => null,\n              }}\n            />\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport isEmpty from 'lodash.isempty';\n\nimport { RootState } from '../../../../store/store.types';\nimport { PlanningState, PlanningYear } from '../../../../store/planning/planning.types';\n// import { CategoriesState } from '../../../../store/categories/categories.types';\nimport * as PlanningActions from '../../../../store/planning/actions';\n\ntype Hook = {\n  plans: Record<number, PlanningYear>;\n  empty: boolean;\n  handleCreateYear: (year: number) => void;\n  handleRemoveYear: (year: number) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const planning = useSelector<RootState, PlanningState>(state => state.planning);\n  // const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n\n  const handleCreateYear = React.useCallback((year: number) => {\n    dispatch(PlanningActions.createYear(year));\n  }, [dispatch]);\n\n  const handleRemoveYear = React.useCallback((year: number) => {\n    dispatch(PlanningActions.removeYear(year));\n  }, [dispatch]);\n\n  return {\n    plans: planning.plans,\n    empty: isEmpty(planning.plans),\n    handleCreateYear,\n    handleRemoveYear,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  selectYear: {\n    width: '100%',\n  },\n  yearCell: {\n    height: '100%',\n    width: '100%',\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  },\n  buttonCell: {\n    paddingRight: 16,\n    paddingLeft: 16,\n    borderBottom: '1px solid rgba(224, 224, 224, 1)',\n  }\n}));\n","import * as React from 'react';\nimport { Route, useHistory } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport MaterialTable, { MTableEditField, MTableCell } from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/EditOutlined';\nimport Search from '@material-ui/icons/Search';\n\nimport { PlanningYear } from '../../../../store/planning/planning.types';\n\nimport { Year, Month } from './screens';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nconst CATEGORIES_COLUMNS = [\n  { title: 'year', field: 'year' },\n  { title: 'balance', field: 'balance' },\n];\n\nconst getRenderEditField = (\n  classes: any,\n  plans: Record<number, PlanningYear>\n) => (props: any): JSX.Element => {\n  if (props.columnDef.field !== 'year') {\n    return (\n      <MTableEditField {...props} />\n    );\n  }\n\n  return (\n    <Select\n      className={classes.selectYear}\n      labelId=\"select-month\"\n      id=\"select-month\"\n      value={props.value}\n      displayEmpty\n      onChange={(e) => props.onChange(e.target.value)}\n    >\n      <MenuItem disabled>Select year</MenuItem>\n      {new Array(11).fill(0).map((_, i) => {\n        const year = i + 2020;\n        const disabled = plans\n          ? !!plans[year]\n          : false;\n\n        return (\n          <MenuItem\n            key={`select-year-${year}`}\n            value={year}\n            disabled={disabled}\n          >\n            {year}\n          </MenuItem>\n        )\n      })}\n    </Select>\n  );\n}\n\nconst getRenderCell = (classes: any, getYearOpenHandler: (year: number) => any) => (props: any): JSX.Element => {\n  if (props.columnDef.field === 'year') {\n    return (\n      <td className={classes.yearCell}>\n        {props.value}\n      </td>\n    );\n  }\n  if (props.columnDef.tableData.columnOrder === CATEGORIES_COLUMNS.length - 1) {\n    return (\n      <>\n        <MTableCell {...props} />\n        <td className={classes.buttonCell}>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={getYearOpenHandler(props.rowData.year)}\n          >\n            Open\n          </Button>\n        </td>\n      </>\n    );\n  }\n\n  return (\n    <MTableCell {...props} />\n  );\n}\n\nconst tableIcons = {\n  Add: React.forwardRef((props: any, ref) => <AddBox {...props} ref={ref} />),\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Delete: React.forwardRef((props: any, ref) => <DeleteOutline {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  ResetSearch: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Search: React.forwardRef((props: any, ref) => <Search {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nexport const Planning: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const Store = useStore();\n\n  const getYearOpenHandler = React.useCallback((year: number) => () => {\n    history.push(`/planning/year-${year}`);\n  }, [history]);\n\n  const handleAddYear = React.useCallback(async (data: any): Promise<void> => {\n    const { year } = data;\n    Store.handleCreateYear(year);\n    return Promise.resolve();\n  }, [Store]);\n\n  const handleRemoveYear = React.useCallback(async (data: any): Promise<void> => {\n    const { year } = data;\n    Store.handleRemoveYear(year);\n    return Promise.resolve();\n  }, [Store]);\n\n  return (\n    <>\n      <Route exact path=\"/planning\">\n        <div className={classes.paper}>\n          <Grid container>\n            {Store.empty && (\n              <div>\n                <Typography variant=\"body1\" component=\"div\">You don't have planning years</Typography>\n              </div>\n            )}\n            <Grid item xs={12} md={12}>\n              <MaterialTable\n                title='Planning years'\n                columns={CATEGORIES_COLUMNS as any}\n                data={Object.values(Store.plans)}\n                icons={tableIcons as any}\n                editable={{\n                  onRowAdd: handleAddYear,\n                  onRowDelete: handleRemoveYear,\n                }}\n                options={{\n                  paging: false,\n                  search: false,\n                }}\n                components={{\n                  EditField: getRenderEditField(classes, Store.plans),\n                  Cell: getRenderCell(classes, getYearOpenHandler),\n                  Header: () => null,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </Route>\n      <Route exact path=\"/planning/year-:year\">\n        <Year />\n      </Route>\n      <Route exact path=\"/planning/year-:year/month-:month\">\n        <Month />\n      </Route>\n    </>\n  );\n}","import { useSelector, useDispatch } from 'react-redux';\n\nimport { RootState } from '../../../../store/store.types';\nimport { CategoriesState, Category, CategoryType } from '../../../../store/categories/categories.types';\nimport * as CategoriesActions from '../../../../store/categories/actions';\n\ntype Hook = {\n  income: Array<Category>;\n  expenses: Array<Category>;\n  onAddCategory: (categoryType: CategoryType, name: string) => void;\n  onUpdateCategory: (type: CategoryType, id: string, name: string) => void;\n  onDeleteCategory: (type: CategoryType, id: string) => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n\n  const categories = useSelector<RootState, CategoriesState>(state => state.categories);\n  const { income, expenses } = categories;\n\n  const handleAddCategory = (type: CategoryType, name: string): void => {\n    if (name) {\n      const category: Category = {\n        id: `f${(+new Date()).toString(16)}`,\n        type,\n        name,\n      };\n      dispatch(CategoriesActions.addCategory(category))\n    }\n  }\n\n  const handleUpdateCategory = (type: CategoryType, id: string, name: string): void => {\n    if (id && name) {\n      const category: Category = {\n        id,\n        type,\n        name,\n      };\n      dispatch(CategoriesActions.updateCategory(category))\n    }\n  }\n\n  const handleDeleteCategory = (type: CategoryType, id: string): void => {\n    if (id && type) {\n      dispatch(CategoriesActions.deleteCategory(type, id))\n    }\n  }\n\n  return {\n    income,\n    expenses,\n    onAddCategory: handleAddCategory,\n    onUpdateCategory: handleUpdateCategory,\n    onDeleteCategory: handleDeleteCategory,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tableWrapper: {\n    marginTop: 24,\n  }\n}));\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/EditOutlined';\nimport Search from '@material-ui/icons/Search';\n\nimport { Category, CategoryType } from '../../../../store/categories/categories.types';\n\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nconst COLUMNS = [\n  { title: 'category', field: 'name' },\n];\n\nconst tableIcons = {\n  Add: React.forwardRef((props: any, ref) => <AddBox {...props} ref={ref} />),\n  Check: React.forwardRef((props: any, ref) => <Check {...props} ref={ref} />),\n  Clear: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Delete: React.forwardRef((props: any, ref) => <DeleteOutline {...props} ref={ref} />),\n  Edit: React.forwardRef((props: any, ref) => <Edit {...props} ref={ref} />),\n  ResetSearch: React.forwardRef((props: any, ref) => <Clear {...props} ref={ref} />),\n  Search: React.forwardRef((props: any, ref) => <Search {...props} ref={ref} />),\n  SortArrow: React.forwardRef((props: any, ref) => <ArrowDownward {...props} ref={ref} />),\n};\n\nconst renderTable = (\n  categories: Array<Category>,\n  title: string,\n  onRowAdd: (newData: any) => Promise<void>,\n  onRowUpdate: (newData: any, oldData: any) => Promise<void>,\n  onRowDelete: (oldData: any) => Promise<void>,\n): JSX.Element => (\n    <Grid item xs={12} md={6}>\n      <MaterialTable\n        title={title}\n        columns={COLUMNS}\n        data={categories}\n        editable={{\n          onRowAdd,\n          onRowUpdate,\n          onRowDelete,\n        }}\n        icons={tableIcons as any}\n        options={{\n          paging: false,\n          search: false,\n        }}\n        localization={{\n          header: {\n            actions: '',\n          },\n          body: {\n            editRow: {\n              deleteText: 'Видалити цю категорію?',\n            },\n            deleteTooltip: 'Видалити'\n          }\n        }}\n      />\n    </Grid>\n  );\n\nexport const Categories: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const getRowAddHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any): Promise<void> => {\n      Store.onAddCategory(categoryType, data.name);\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  const getRowUpdateHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any, oldData: any): Promise<void> => {\n      Store.onUpdateCategory(categoryType, data.id, data.name)\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  const getRowDeleteHandler = React.useCallback((categoryType: CategoryType) => {\n    return async (data: any): Promise<void> => {\n      const { id } = data;\n      Store.onDeleteCategory(categoryType, id);\n      return Promise.resolve();\n    }\n  }, [Store]);\n\n  return (\n    <div className={classes.paper}>\n      <Grid container spacing={4} className={classes.tableWrapper}>\n        {renderTable(\n          Store.expenses,\n          'Expenses',\n          getRowAddHandler('expenses'),\n          getRowUpdateHandler('expenses'),\n          getRowDeleteHandler('expenses')\n        )}\n        {renderTable(\n          Store.income,\n          'Income',\n          getRowAddHandler('income'),\n          getRowUpdateHandler('income'),\n          getRowDeleteHandler('income')\n        )}\n      </Grid>\n    </div>\n  );\n}","// import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import * as UserApi from '../../api/user';\n// import * as StatementApi from '../../api/statement';\nimport { RootState } from '../../store/store.types';\nimport { UserState } from '../../store/user/user.types';\nimport * as AuthActions from '../../store/auth/actions';\n// import * as UserActions from '../../store/user/actions';\n// import * as StatementActions from '../../store/statement/actions';\n\ntype Hook = {\n  userName: string;\n  onRemoveToken: () => void;\n}\n\nexport const useStore = (): Hook => {\n  const dispatch = useDispatch();\n  const user = useSelector<RootState, UserState>(state => state.user);\n\n  const onRemoveToken = () => {\n    dispatch(AuthActions.removeToken());\n  }\n\n  // const getUserInfo = React.useCallback(async () => {\n  //   const userName = await UserApi.getUserInfo();\n  //   if (userName) {\n  //     dispatch(UserActions.setName(userName));\n  //   }\n  // }, [dispatch]);\n\n  // const getStatementCurrentMonth = React.useCallback(async (month: number) => {\n  //   const items = await StatementApi.getForMonth(month);\n  //   dispatch(StatementActions.setStatement(items));\n  // }, [dispatch]);\n\n  // const getCurrentMonth = React.useCallback(() => {\n  //   const month = new Date().getMonth();\n  //   dispatch(UserActions.setMonth(month));\n  // }, [dispatch]);\n\n  // React.useEffect(() => {\n  //   getUserInfo();\n  //   getCurrentMonth();\n  // }, [getUserInfo, getCurrentMonth]);\n\n  // React.useEffect(() => {\n  //   getStatementCurrentMonth(user.month);\n  // }, [getStatementCurrentMonth, user.month]);\n\n  return {\n    userName: user.name,\n    onRemoveToken,\n  }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n","import * as React from 'react';\nimport { Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport { SideMenu, Header, Breadcrumbs } from './components';\nimport { Dashboard, Planning, Categories } from './screens';\nimport { useStore } from './useStore';\nimport { useStyles } from './styles';\n\nexport const User: React.FC = () => {\n  const classes = useStyles();\n  const Store = useStore();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(true);\n\n  const handleDrawerToggle = React.useCallback(() => {\n    console.log(drawerOpen, !drawerOpen)\n    setDrawerOpen(!drawerOpen);\n  }, [drawerOpen, setDrawerOpen]);\n\n  const handleLogout = React.useCallback(() => {\n    Store.onRemoveToken();\n  }, [Store]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header\n        drawerOpen={drawerOpen}\n        onDrawerToggleClick={handleDrawerToggle}\n        onLogout={handleLogout}\n      />\n      <SideMenu\n        drawerOpen={drawerOpen}\n        userName={Store.userName}\n        onDrawerToggleClick={handleDrawerToggle}\n      />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Breadcrumbs />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/planning\">\n            <Planning />\n          </Route>\n          <Route path=\"/categories\">\n            <Categories />\n          </Route>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../store/store.types';\nimport { AuthState } from '../store/auth/auth.types';\n\ntype Hook = boolean;\n\nexport const useAuth = (): Hook => {\n  const { token } = useSelector<RootState, AuthState>(state => state.auth);\n\n  return !!token;\n}","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const PrivateRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from '../../../hooks';\n\nexport const LoginRoute: React.FC<any> = ({\n  children,\n  ...rest\n}) => {\n  const isAuthorized = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isAuthorized ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from '../store';\nimport { Login, User } from '../screens';\n\nimport { LoginRoute, PrivateRoute } from './components';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#43a047',\n    },\n    secondary: {\n      main: '#388e3c'\n    }\n  }\n});\n\nconst AppInner: React.FC = () => {\n  return (\n    <Switch>\n      <LoginRoute path=\"/login\">\n        <Login />\n      </LoginRoute>\n      <PrivateRoute path=\"/\">\n        <User />\n      </PrivateRoute>\n    </Switch>\n  );\n}\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <Router basename=\"/monoplan-poc\">\n            <AppInner />\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}